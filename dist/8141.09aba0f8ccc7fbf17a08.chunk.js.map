{"version":3,"file":"8141.09aba0f8ccc7fbf17a08.chunk.js","mappings":"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","sources":["webpack://rewards-catalog/./app/components/pages/Cap/actions.js","webpack://rewards-catalog/./app/components/pages/Cap/constants.js","webpack://rewards-catalog/./app/components/pages/Cap/messages.js","webpack://rewards-catalog/./app/components/pages/CustomFieldsSettings/CustomFieldsSettingsComponentLazyLoader.js","webpack://rewards-catalog/./app/hoc/withLoadable.js","webpack://rewards-catalog/./app/components/pages/RewardsCatalogSettings/constants.js","webpack://rewards-catalog/./app/components/pages/RewardsCatalogSettings/RewardsCatalogSettings.js"],"sourcesContent":["import { actionTypes } from './constants';\n\nexport const getSidebarMenuData = () => ({\n  type: actionTypes.GET_SIDEBAR_MENU_DATA_REQUEST,\n});\n\nexport const getSidebarMenuDataSuccess = (data) => ({\n  type: actionTypes.GET_SIDEBAR_MENU_DATA_SUCCESS,\n  data,\n});\n\nexport const getSidebarMenuDataFailure = (error) => ({\n  type: actionTypes.GET_SIDEBAR_MENU_DATA_FAILURE,\n  error,\n});\n\nexport const clearSidebarMenuData = () => ({\n  type: actionTypes.CLEAR_SIDEBAR_MENU_DATA,\n});\n\nexport const getTopbarMenuData = () => ({\n  type: actionTypes.GET_TOPBAR_MENU_DATA_REQUEST,\n});\n\nexport const getTopbarMenuDataSuccess = (data) => ({\n  type: actionTypes.GET_TOPBAR_MENU_DATA_SUCCESS,\n  data,\n});\n\nexport const getTopbarMenuDataFailure = (error) => ({\n  type: actionTypes.GET_TOPBAR_MENU_DATA_FAILURE,\n  error,\n});\n\nexport const clearTopbarMenuData = () => ({\n  type: actionTypes.CLEAR_TOPBAR_MENU_DATA,\n});\n\nexport const changeOrg = (orgID, successCallback) => ({\n  type: actionTypes.SWITCH_ORG_REQUEST,\n  orgID,\n  successCallback,\n});\n\nexport const getUserData = () => ({\n  type: actionTypes.GET_USER_DATA_REQUEST,\n});\n\nexport const getSupportedLocales = () => ({\n  type: actionTypes.GET_SUPPORTED_LOCALES_REQUEST,\n});\n\nexport const getOrganizationData = () => ({\n  type: actionTypes.GET_ORG_DETAILS_REQUEST,\n});\n","import { defineActionTypes } from '@capillarytech/vulcan-react-sdk/utils';\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport globalMessages from '../Cap/messages';\n\nconst scope = '/Components/pages/Cap/';\n\nexport const actionTypes = defineActionTypes(\n  {\n    GET_SIDEBAR_MENU_DATA_REQUEST: 'GET_SIDEBAR_MENU_DATA_REQUEST',\n    GET_SIDEBAR_MENU_DATA_SUCCESS: 'GET_SIDEBAR_MENU_DATA_SUCCESS',\n    GET_SIDEBAR_MENU_DATA_FAILURE: 'GET_SIDEBAR_MENU_DATA_FAILURE',\n    CLEAR_SIDEBAR_MENU_DATA: 'CLEAR_SIDEBAR_MENU_DATA',\n    GET_TOPBAR_MENU_DATA_REQUEST: 'GET_TOPBAR_MENU_DATA_REQUEST',\n    GET_TOPBAR_MENU_DATA_SUCCESS: 'GET_TOPBAR_MENU_DATA_SUCCESS',\n    GET_TOPBAR_MENU_DATA_FAILURE: 'GET_TOPBAR_MENU_DATA_FAILURE',\n    CLEAR_TOPBAR_MENU_DATA: 'CLEAR_TOPBAR_MENU_DATA',\n    GET_USER_DATA_REQUEST: 'GET_USER_DATA_REQUEST',\n    GET_USER_DATA_SUCCESS: 'GET_USER_DATA_SUCCESS',\n    GET_USER_DATA_FAILURE: 'GET_USER_DATA_FAILURE',\n    SWITCH_ORG_REQUEST: 'SWITCH_ORG_REQUEST',\n    SWITCH_ORG_SUCCESS: 'SWITCH_ORG_SUCCESS',\n    SWITCH_ORG_FAILURE: 'SWITCH_ORG_FAILURE',\n    GET_SUPPORTED_LOCALES_REQUEST: 'GET_SUPPORTED_LOCALES_REQUEST',\n    GET_SUPPORTED_LOCALES_SUCCESS: 'GET_SUPPORTED_LOCALES_SUCCESS',\n    GET_SUPPORTED_LOCALES_FAILURE: 'GET_SUPPORTED_LOCALES_FAILURE',\n    GET_ORG_DETAILS_REQUEST: 'GET_ORG_DETAILS_REQUEST',\n    GET_ORG_DETAILS_SUCCESS: 'GET_ORG_DETAILS_SUCCESS',\n    GET_ORG_DETAILS_FAILURE: 'GET_ORG_DETAILS_FAILURE',\n  },\n  { prefix: CURRENT_APP_NAME, scope: scope },\n);\n\nexport const PROGRAM_PERFIX_PATH = '/program/';\n\nexport const SIDEBAR_MENU_ITEM_POSITION = 'left';\nexport const LOYALTY_SETTINGS_URL = '/settings';\nexport const LOYALTY_NOTIFICATION_URL = '/notifications';\nexport const ORG_SETTINGS_URL = '/settings';\nexport const MODULE_NAME_URL = '/settings';\nexport const HELP_URL = 'https://support.capillarytech.com/en/support/solutions/97443';\n\nexport const PRODUCTION = 'production';\n\nexport const STANDARD = 'STANDARD';\n\nexport const getSettingsMenuData = () => [\n  {\n    title: <FormattedMessage {...globalMessages.categories} />,\n    key: 'categories',\n    link: `/settings/categories`,\n  },\n  {\n    title: <FormattedMessage {...globalMessages.currencyPartners} />,\n    key: 'currencyPartners',\n    link: `/settings/currency-partners`,\n  },\n  {\n    title: <FormattedMessage {...globalMessages.customFields} />,\n    key: 'customFields',\n    link: `/settings/custom-fields`,\n  },\n  {\n    title: <FormattedMessage {...globalMessages.eventNotification} />,\n    key: 'eventNotification',\n    link: `/settings/event-notification`,\n  },\n  {\n    title: <FormattedMessage {...globalMessages.fulfillmentStatus} />,\n    key: 'fulfillmentStatus',\n    link: `/settings/fulfillment-status`,\n  },\n  {\n    title: <FormattedMessage {...globalMessages.geography} />,\n    key: 'geography',\n    link: `/settings/geography`,\n  },\n  {\n    title: <FormattedMessage {...globalMessages.groups} />,\n    key: 'groups',\n    link: `/settings/groups`,\n  },\n  {\n    title: <FormattedMessage {...globalMessages.languages} />,\n    key: 'languages',\n    link: `/settings/languages`,\n  },\n  {\n    title: <FormattedMessage {...globalMessages.redemptionLimit} />,\n    key: 'redemptionLimit',\n    link: `/settings/redemption-limit`,\n  },\n];\n\nexport const getTopbarMenuDataValue = () => [];\n","/*\n * Cap Messages\n *\n * This contains all the text for the Cap container.\n */\n\nimport { defineMessages } from 'react-intl';\n\nexport const scope = 'rewardsCatalog.components.pages.Cap';\n\nexport default defineMessages({\n  home: {\n    id: `${scope}.home`,\n    defaultMessage: 'Home page',\n  },\n  dashboard: {\n    id: `${scope}.dashboard`,\n    defaultMessage: 'Dashboard',\n  },\n  header: {\n    id: `${scope}.header`,\n    defaultMessage: 'This is the Cap container!',\n  },\n  errorMessage: {\n    id: `${scope}.errorMessage`,\n    defaultMessage: 'Something went wrong!',\n  },\n  save: {\n    id: `${scope}.save`,\n    defaultMessage: 'Save',\n  },\n  reset: {\n    id: `${scope}.reset`,\n    defaultMessage: 'Reset',\n  },\n  select: {\n    id: `${scope}.select`,\n    defaultMessage: 'Select',\n  },\n  noResultsFound: {\n    id: `${scope}.noResultsFound`,\n    defaultMessage: 'No results found',\n  },\n  search: {\n    id: `${scope}.search`,\n    defaultMessage: 'Search',\n  },\n  create: {\n    id: `${scope}.create`,\n    defaultMessage: 'Create',\n  },\n  edit: {\n    id: `${scope}.edit`,\n    defaultMessage: 'Edit',\n  },\n  delete: {\n    id: `${scope}.delete`,\n    defaultMessage: 'Delete',\n  },\n  status: {\n    id: `${scope}.status`,\n    defaultMessage: 'Status',\n  },\n  areYouSureText: {\n    id: `${scope}.areYouSureText`,\n    defaultMessage: 'Are you sure?',\n  },\n  changeOk: {\n    id: `${scope}.changeOk`,\n    defaultMessage: 'Ok, change',\n  },\n  done: {\n    id: `${scope}.done`,\n    defaultMessage: 'Done',\n  },\n  cancel: {\n    id: `${scope}.cancel`,\n    defaultMessage: 'Cancel',\n  },\n  confirm: {\n    id: `${scope}.confirm`,\n    defaultMessage: 'Confirm',\n  },\n  somethingWentWrongTitle: {\n    id: `${scope}.somethingWentWrongTitle`,\n    defaultMessage: 'somethingWentWrongTitle',\n  },\n  somethingWentWrongDesc: {\n    id: `${scope}.somethingWentWrongDesc`,\n    defaultMessage: 'somethingWentWrongDesc',\n  },\n  tryRefreshing: {\n    id: `${scope}.tryRefreshing`,\n    defaultMessage: 'tryRefreshing',\n  },\n  customFields: {\n    id: `${scope}.customFields`,\n    defaultMessage: 'Custom fields',\n  },\n  categories: {\n    id: `${scope}.categories`,\n    defaultMessage: 'Categories',\n  },\n  currencyPartners: {\n    id: `${scope}.currencyPartners`,\n    defaultMessage: 'Currency partners',\n  },\n  eventNotification: {\n    id: `${scope}.eventNotification`,\n    defaultMessage: 'Event notification',\n  },\n  fulfillmentStatus: {\n    id: `${scope}.fulfillmentStatus`,\n    defaultMessage: 'Fulfillment status',\n  },\n  geography: {\n    id: `${scope}.geography`,\n    defaultMessage: 'Geography',\n  },\n  groups: {\n    id: `${scope}.groups`,\n    defaultMessage: 'Groups',\n  },\n  languages: {\n    id: `${scope}.languages`,\n    defaultMessage: 'Languages',\n  },\n  redemptionLimit: {\n    id: `${scope}.redemptionLimit`,\n    defaultMessage: 'Redemption limit',\n  },\n  name: {\n    id: `${scope}.name`,\n    defaultMessage: 'Name',\n  },\n  dataType: {\n    id: `${scope}.dataType`,\n    defaultMessage: 'Data type',\n  },\n  mandatory: {\n    id: `${scope}.mandatory`,\n    defaultMessage: 'Mandatory',\n  },\n  scope: {\n    id: `${scope}.scope`,\n    defaultMessage: 'Scope',\n  },\n  defaultValue: {\n    id: `${scope}.defaultValue`,\n    defaultMessage: 'Default value',\n  },\n  defaultValueOptional: {\n    id: `${scope}.defaultValueOptional`,\n    defaultMessage: 'Default value (Optional)',\n  },\n  lastUpdatedOn: {\n    id: `${scope}.lastUpdatedOn`,\n    defaultMessage: 'Last updated on',\n  },\n  updatedBy: {\n    id: `${scope}.updatedBy`,\n    defaultMessage: 'Updated by',\n  },\n  removeAll: {\n    id: `${scope}.removeAll`,\n    defaultMessage: 'Remove all',\n  },\n  enterName: {\n    id: `${scope}.enterName`,\n    defaultMessage: 'Enter name',\n  },\n  enterValue: {\n    id: `${scope}.enterValue`,\n    defaultMessage: 'Enter value',\n  },\n  comingSoon: {\n    id: `${scope}.comingSoon`,\n    defaultMessage: '⏳ Coming soon!',\n  },\n  boolean: {\n    id: `${scope}.boolean`,\n    defaultMessage: 'Boolean',\n  },\n  date: {\n    id: `${scope}.date`,\n    defaultMessage: 'Date',\n  },\n  dateAndTime: {\n    id: `${scope}.dateAndTime`,\n    defaultMessage: 'Date and time',\n  },\n  number: {\n    id: `${scope}.number`,\n    defaultMessage: 'Number',\n  },\n  string: {\n    id: `${scope}.string`,\n    defaultMessage: 'String',\n  },\n  enum: {\n    id: `${scope}.enum`,\n    defaultMessage: 'Enum',\n  },\n  optional: {\n    id: `${scope}.optional`,\n    defaultMessage: '(Optional)',\n  },\n  preDefinedValues: {\n    id: `${scope}.preDefinedValues`,\n    defaultMessage: 'Pre-defined values',\n  },\n  preDefinedValuesOptional: {\n    id: `${scope}.preDefinedValuesOptional`,\n    defaultMessage: 'Pre-defined values (Optional)',\n  },\n  dataTypes: {\n    id: `${scope}.dataTypes`,\n    defaultMessage: `{dataType, select,\n    STRING {String}\n    INTEGER {Number}\n    BOOLEAN {Boolean}\n    ENUM {Enum}\n    DATE {Date and time}\n    other {''}\n    }`,\n  },\n  dataTypesPlaceholder: {\n    id: `${scope}.dataTypesPlaceholder`,\n    defaultMessage: `{dataType, select,\n    STRING {Enter string value}\n    INTEGER {Enter number value}\n    BOOLEAN {Select boolean value}\n    ENUM {Select value}\n    DATE {Select date}\n    other {''}\n    }`,\n  },\n  true: {\n    id: `${scope}.true`,\n    defaultMessage: 'True',\n  },\n  false: {\n    id: `${scope}.false`,\n    defaultMessage: 'False',\n  },\n  selectValue: {\n    id: `${scope}.selectValue`,\n    defaultMessage: 'Select value',\n  },\n});","import withLoadable from 'hoc/withLoadable';\n\nexport default withLoadable(() => import('./CustomFieldsListing'));\n","import CapSpin from '@capillarytech/cap-ui-library/CapSpin';\nimport { loadable } from '@capillarytech/cap-ui-utils';\nimport React, { Suspense } from 'react';\n\nconst withLoadable = (importFunc, FallbackComponent = CapSpin) => {\n  const LoadableComponent = loadable(importFunc);\n\n  const WithLoadable = (props) => (\n    <Suspense fallback={<FallbackComponent />}>\n      <LoadableComponent {...props} />\n    </Suspense>\n  );\n\n  WithLoadable.displayName = `withLoadable(${importFunc.name || 'Component'})`;\n\n  return WithLoadable;\n};\n\nexport default withLoadable;\n","import CustomFieldsListing from '../CustomFieldsSettings';\n\nexport const DEFAULT_CATEGORIES_SETTINGS_PATH = '/settings/categories';\nexport const DEFAULT_SETTINGS_PATH = '/rewards-catalog/ui/settings';\n\nexport const routeParamList = [\n  {\n    key: 'categories',\n    path: 'categories',\n    component: CustomFieldsListing,\n    heading: 'Categories',\n  },\n  {\n    key: 'currencyPartners',\n    path: 'currency-partners',\n    component: CustomFieldsListing,\n    heading: 'Currency Partners',\n  },\n  {\n    key: 'customFields',\n    path: 'custom-fields',\n    component: CustomFieldsListing,\n    heading: 'Custom Fields',\n  },\n  {\n    key: 'eventNotification',\n    path: 'event-notification',\n    component: CustomFieldsListing,\n    heading: 'Event Notification',\n  },\n  {\n    key: 'fulfillmentStatus',\n    path: 'fulfillment-status',\n    component: CustomFieldsListing,\n    heading: 'Fulfillment Status',\n  },\n  {\n    key: 'geography',\n    path: 'geography',\n    component: CustomFieldsListing,\n    heading: 'Geography',\n  },\n  {\n    key: 'groups',\n    path: 'groups',\n    component: CustomFieldsListing,\n    heading: 'Groups',\n  },\n  {\n    key: 'languages',\n    path: 'languages',\n    component: CustomFieldsListing,\n    heading: 'Languages',\n  },\n  {\n    key: 'redemptionLimit',\n    path: 'redemption-limit',\n    component: CustomFieldsListing,\n    heading: 'Redemption Limit',\n  },\n];\n","import CapRow from '@capillarytech/cap-ui-library/CapRow';\nimport PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Route, withRouter } from 'react-router-dom';\nimport { compose, bindActionCreators } from 'redux';\n\nimport { isRewardsCatalogEnabled } from '../../../utils/authWrapper';\nimport * as capActions from '../Cap/actions';\n\nimport {\n  DEFAULT_SETTINGS_PATH,\n  DEFAULT_CATEGORIES_SETTINGS_PATH,\n  routeParamList,\n} from './constants';\n\nexport const RewardsCatalogSettings = ({ capActions, match, history }) => {\n  useEffect(() => {\n    capActions.getSidebarMenuData();\n    if (location.pathname === DEFAULT_SETTINGS_PATH) history.push(DEFAULT_CATEGORIES_SETTINGS_PATH);\n    return () => {\n      capActions.clearSidebarMenuData();\n    };\n  }, []);\n\n  const routes = React.useMemo(\n    () =>\n      routeParamList?.map(({ key, path, component, heading }) => (\n        <Route\n          key={key}\n          path={`${match.path}/${path}`}\n          render={() => React.createElement(component, { heading })}\n          exact\n        />\n      )),\n    [match.path],\n  );\n\n  return (\n    <CapRow>\n      <Switch>{routes}</Switch>\n    </CapRow>\n  );\n};\n\nRewardsCatalogSettings.propTypes = {\n  capActions: PropTypes.object.isRequired,\n  match: PropTypes.object,\n  history: PropTypes.object.isRequired,\n};\n\nRewardsCatalogSettings.defaultProps = {\n  match: {},\n};\n\nexport function mapDispatchToProps(dispatch) {\n  return {\n    capActions: bindActionCreators(capActions, dispatch),\n  };\n}\n\nconst withConnect = connect(null, mapDispatchToProps);\n\nexport default isRewardsCatalogEnabled(compose(withRouter, withConnect)(RewardsCatalogSettings));\n"],"names":["getSidebarMenuData","getSidebarMenuDataSuccess","data","getSidebarMenuDataFailure","error","clearSidebarMenuData","getTopbarMenuData","getTopbarMenuDataSuccess","getTopbarMenuDataFailure","clearTopbarMenuData","changeOrg","orgID","successCallback","getUserData","getSupportedLocales","getOrganizationData","scope","actionTypes","PROGRAM_PERFIX_PATH","SIDEBAR_MENU_ITEM_POSITION","LOYALTY_SETTINGS_URL","LOYALTY_NOTIFICATION_URL","ORG_SETTINGS_URL","MODULE_NAME_URL","HELP_URL","PRODUCTION","STANDARD","getSettingsMenuData","getTopbarMenuDataValue","importFunc","FallbackComponent","CapSpin","LoadableComponent","WithLoadable","props","DEFAULT_CATEGORIES_SETTINGS_PATH","DEFAULT_SETTINGS_PATH","routeParamList","RewardsCatalogSettings","capActions","match","history","routes","key","path","component","heading","CapRow","mapDispatchToProps","dispatch","withConnect"],"sourceRoot":""}