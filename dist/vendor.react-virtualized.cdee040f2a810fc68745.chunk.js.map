{"version":3,"file":"vendor.react-virtualized.cdee040f2a810fc68745.chunk.js","mappings":"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","sources":["webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/Grid/types.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/utils/animationFrame.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/Grid/Grid.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/ArrowKeyStepper/types.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/vendor/detectElementResize.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/CellMeasurer/types.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurerCache.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/CellMeasurer/index.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/Collection/CollectionView.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/Collection/types.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/Collection/Section.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/Collection/SectionManager.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/Collection/Collection.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/Collection/index.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/ColumnSizer/index.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/InfiniteLoader/index.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/List/types.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/List/List.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/vendor/intervalTree.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/Masonry/PositionCache.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/Masonry/Masonry.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/Masonry/createCellPositioner.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/Masonry/index.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/MultiGrid/index.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/ScrollSync/index.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/Table/types.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/Table/SortDirection.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/Table/SortIndicator.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/Table/Column.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/Table/Table.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/Table/index.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js","webpack://rewards-catalog/./node_modules/react-virtualized/dist/es/WindowScroller/index.js"],"sourcesContent":["/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","import * as React from 'react';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nvar bpfrpt_proptype_CellPosition = process.env.NODE_ENV === 'production' ? null : {\n  \"columnIndex\": PropTypes.number.isRequired,\n  \"rowIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_CellRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"columnIndex\": PropTypes.number.isRequired,\n  \"isScrolling\": PropTypes.bool.isRequired,\n  \"isVisible\": PropTypes.bool.isRequired,\n  \"key\": PropTypes.string.isRequired,\n  \"parent\": PropTypes.object.isRequired,\n  \"rowIndex\": PropTypes.number.isRequired,\n  \"style\": PropTypes.object.isRequired\n};\nvar bpfrpt_proptype_CellRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_CellCache = process.env.NODE_ENV === 'production' ? null : PropTypes.objectOf(PropTypes.node.isRequired);\nvar bpfrpt_proptype_StyleCache = process.env.NODE_ENV === 'production' ? null : PropTypes.objectOf(PropTypes.object.isRequired);\nvar bpfrpt_proptype_CellRangeRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"cellCache\": PropTypes.objectOf(PropTypes.node.isRequired).isRequired,\n  \"cellRenderer\": PropTypes.func.isRequired,\n  \"columnSizeAndPositionManager\": function columnSizeAndPositionManager() {\n    return (typeof ScalingCellSizeAndPositionManager === \"function\" ? PropTypes.instanceOf(ScalingCellSizeAndPositionManager).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"columnStartIndex\": PropTypes.number.isRequired,\n  \"columnStopIndex\": PropTypes.number.isRequired,\n  \"deferredMeasurementCache\": PropTypes.object,\n  \"horizontalOffsetAdjustment\": PropTypes.number.isRequired,\n  \"isScrolling\": PropTypes.bool.isRequired,\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n  \"parent\": PropTypes.object.isRequired,\n  \"rowSizeAndPositionManager\": function rowSizeAndPositionManager() {\n    return (typeof ScalingCellSizeAndPositionManager === \"function\" ? PropTypes.instanceOf(ScalingCellSizeAndPositionManager).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"rowStartIndex\": PropTypes.number.isRequired,\n  \"rowStopIndex\": PropTypes.number.isRequired,\n  \"scrollLeft\": PropTypes.number.isRequired,\n  \"scrollTop\": PropTypes.number.isRequired,\n  \"styleCache\": PropTypes.objectOf(PropTypes.object.isRequired).isRequired,\n  \"verticalOffsetAdjustment\": PropTypes.number.isRequired,\n  \"visibleColumnIndices\": PropTypes.object.isRequired,\n  \"visibleRowIndices\": PropTypes.object.isRequired\n};\nvar bpfrpt_proptype_CellRangeRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_CellSizeGetter = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_CellSize = process.env.NODE_ENV === 'production' ? null : PropTypes.oneOfType([PropTypes.func, PropTypes.number]);\nvar bpfrpt_proptype_NoContentRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_Scroll = process.env.NODE_ENV === 'production' ? null : {\n  \"clientHeight\": PropTypes.number.isRequired,\n  \"clientWidth\": PropTypes.number.isRequired,\n  \"scrollHeight\": PropTypes.number.isRequired,\n  \"scrollLeft\": PropTypes.number.isRequired,\n  \"scrollTop\": PropTypes.number.isRequired,\n  \"scrollWidth\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_ScrollbarPresenceChange = process.env.NODE_ENV === 'production' ? null : {\n  \"horizontal\": PropTypes.bool.isRequired,\n  \"vertical\": PropTypes.bool.isRequired,\n  \"size\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_RenderedSection = process.env.NODE_ENV === 'production' ? null : {\n  \"columnOverscanStartIndex\": PropTypes.number.isRequired,\n  \"columnOverscanStopIndex\": PropTypes.number.isRequired,\n  \"columnStartIndex\": PropTypes.number.isRequired,\n  \"columnStopIndex\": PropTypes.number.isRequired,\n  \"rowOverscanStartIndex\": PropTypes.number.isRequired,\n  \"rowOverscanStopIndex\": PropTypes.number.isRequired,\n  \"rowStartIndex\": PropTypes.number.isRequired,\n  \"rowStopIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_OverscanIndicesGetterParams = process.env.NODE_ENV === 'production' ? null : {\n  // One of SCROLL_DIRECTION_HORIZONTAL or SCROLL_DIRECTION_VERTICAL\n  \"direction\": PropTypes.oneOf([\"horizontal\", \"vertical\"]).isRequired,\n  // One of SCROLL_DIRECTION_BACKWARD or SCROLL_DIRECTION_FORWARD\n  \"scrollDirection\": PropTypes.oneOf([-1, 1]).isRequired,\n  // Number of rows or columns in the current axis\n  \"cellCount\": PropTypes.number.isRequired,\n  // Maximum number of cells to over-render in either direction\n  \"overscanCellsCount\": PropTypes.number.isRequired,\n  // Begin of range of visible cells\n  \"startIndex\": PropTypes.number.isRequired,\n  // End of range of visible cells\n  \"stopIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_OverscanIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"overscanStartIndex\": PropTypes.number.isRequired,\n  \"overscanStopIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_OverscanIndicesGetter = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_Alignment = process.env.NODE_ENV === 'production' ? null : PropTypes.oneOf([\"auto\", \"end\", \"start\", \"center\"]);\nvar bpfrpt_proptype_VisibleCellRange = process.env.NODE_ENV === 'production' ? null : {\n  \"start\": PropTypes.number,\n  \"stop\": PropTypes.number\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellPosition };\nexport { bpfrpt_proptype_CellRendererParams };\nexport { bpfrpt_proptype_CellRenderer };\nexport { bpfrpt_proptype_CellCache };\nexport { bpfrpt_proptype_StyleCache };\nexport { bpfrpt_proptype_CellRangeRendererParams };\nexport { bpfrpt_proptype_CellRangeRenderer };\nexport { bpfrpt_proptype_CellSizeGetter };\nexport { bpfrpt_proptype_CellSize };\nexport { bpfrpt_proptype_NoContentRenderer };\nexport { bpfrpt_proptype_Scroll };\nexport { bpfrpt_proptype_ScrollbarPresenceChange };\nexport { bpfrpt_proptype_RenderedSection };\nexport { bpfrpt_proptype_OverscanIndicesGetterParams };\nexport { bpfrpt_proptype_OverscanIndices };\nexport { bpfrpt_proptype_OverscanIndicesGetter };\nexport { bpfrpt_proptype_Alignment };\nexport { bpfrpt_proptype_VisibleCellRange };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionData\", {});\n\n    _defineProperty(this, \"_lastMeasuredIndex\", -1);\n\n    _defineProperty(this, \"_lastBatchedIndex\", -1);\n\n    _defineProperty(this, \"_cellCount\", void 0);\n\n    _defineProperty(this, \"_cellSizeGetter\", void 0);\n\n    _defineProperty(this, \"_estimatedCellSize\", void 0);\n\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport { CellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\nimport { getMaxElementSize } from './maxElementSize.js';\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, [\"maxScrollSize\"]);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionManager\", void 0);\n\n    _defineProperty(this, \"_maxScrollSize\", void 0);\n\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport { ScalingCellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","import ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSize } from \"../types\";","/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\n\nimport { bpfrpt_proptype_CellRangeRendererParams } from \"./types\";","// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import { caf, raf } from './animationFrame';\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": PropTypes.number.isRequired\n};\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n  return frame;\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_AnimationTimeoutId };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grid).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onGridRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollLeftFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollTopFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_horizontalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_verticalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollbarPresenceChanged\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollingContainer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_childrenToDisplay\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollTop\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollLeft\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_disablePointerEventsTimeoutId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_styleCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", _extends({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: clsx('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": PropTypes.bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === \"function\" ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === \"function\" ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": PropTypes.string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": PropTypes.object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": PropTypes.string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": PropTypes.object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": PropTypes.object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": PropTypes.number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": PropTypes.func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": PropTypes.string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": PropTypes.bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": PropTypes.func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": PropTypes.number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": PropTypes.string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": PropTypes.number.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellRangeRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellPosition } from \"./types\";\nimport { bpfrpt_proptype_CellSize } from \"./types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"./types\";\nimport { bpfrpt_proptype_NoContentRenderer } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from \"./types\";\nimport { bpfrpt_proptype_RenderedSection } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"./types\";\nimport { bpfrpt_proptype_Alignment } from \"./types\";\nimport { bpfrpt_proptype_CellCache } from \"./types\";\nimport { bpfrpt_proptype_StyleCache } from \"./types\";\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArrowKeyStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollToColumn: 0,\n      scrollToRow: 0,\n      instanceProps: {\n        prevScrollToColumn: 0,\n        prevScrollToRow: 0\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onKeyDown\", function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow; // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref) {\n      var columnStartIndex = _ref.columnStartIndex,\n          columnStopIndex = _ref.columnStopIndex,\n          rowStartIndex = _ref.rowStartIndex,\n          rowStopIndex = _ref.rowStopIndex;\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    });\n\n    return _this;\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: \"setScrollIndexes\",\n    value: function setScrollIndexes(_ref2) {\n      var scrollToColumn = _ref2.scrollToColumn,\n          scrollToRow = _ref2.scrollToRow;\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          children = _this$props2.children;\n\n      var _this$_getScrollState3 = this._getScrollState(),\n          scrollToColumn = _this$_getScrollState3.scrollToColumn,\n          scrollToRow = _this$_getScrollState3.scrollToRow;\n\n      return React.createElement(\"div\", {\n        className: className,\n        onKeyDown: this._onKeyDown\n      }, children({\n        onSectionRendered: this._onSectionRendered,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow\n      }));\n    }\n  }, {\n    key: \"_getScrollState\",\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: \"_updateScrollState\",\n    value: function _updateScrollState(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n      var _this$props3 = this.props,\n          isControlled = _this$props3.isControlled,\n          onScrollToChange = _this$props3.onScrollToChange;\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n\n      if (!isControlled) {\n        this.setState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return {};\n      }\n\n      if (nextProps.scrollToColumn !== prevState.instanceProps.prevScrollToColumn || nextProps.scrollToRow !== prevState.instanceProps.prevScrollToRow) {\n        return _objectSpread({}, prevState, {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow,\n          instanceProps: {\n            prevScrollToColumn: nextProps.scrollToColumn,\n            prevScrollToRow: nextProps.scrollToRow\n          }\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"children\": PropTypes.func.isRequired,\n  \"className\": PropTypes.string,\n  \"columnCount\": PropTypes.number.isRequired,\n  \"disabled\": PropTypes.bool.isRequired,\n  \"isControlled\": PropTypes.bool.isRequired,\n  \"mode\": PropTypes.oneOf([\"cells\", \"edges\"]).isRequired,\n  \"onScrollToChange\": PropTypes.func,\n  \"rowCount\": PropTypes.number.isRequired,\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(ArrowKeyStepper, \"defaultProps\", {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n});\n\npolyfill(ArrowKeyStepper);\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_ScrollIndices } from \"./types\";\nimport PropTypes from \"prop-types\";","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        var resizeTriggersHtml = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n\n        if (window.trustedTypes) {\n          var staticPolicy = trustedTypes.createPolicy('react-virtualized-auto-sizer', {\n            createHTML: function createHTML() {\n              return resizeTriggersHtml;\n            }\n          });\n          element.__resizeTriggers__.innerHTML = staticPolicy.createHTML('');\n        } else {\n          element.__resizeTriggers__.innerHTML = resizeTriggersHtml;\n        }\n\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_parentNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoSizer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n\n    return _this;\n  }\n\n  _createClass(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = createDetectElementResize(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n\n  return AutoSizer;\n}(React.Component), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": PropTypes.func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": PropTypes.string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": PropTypes.number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": PropTypes.number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": PropTypes.bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": PropTypes.bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": PropTypes.string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object\n}), _temp);\n\n_defineProperty(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});\n\nexport { AutoSizer as default };\nimport PropTypes from \"prop-types\";","var bpfrpt_proptype_CellMeasureCache = process.env.NODE_ENV === 'production' ? null : {\n  \"hasFixedWidth\": PropTypes.func.isRequired,\n  \"hasFixedHeight\": PropTypes.func.isRequired,\n  \"has\": PropTypes.func.isRequired,\n  \"set\": PropTypes.func.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasureCache };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || findDOMNode(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === \"function\" ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  \"columnIndex\": PropTypes.number,\n  \"index\": PropTypes.number,\n  \"parent\": PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  \"rowIndex\": PropTypes.number\n}), _temp); // Used for DEV mode warning check\n\n_defineProperty(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nexport { CellMeasurer as default };\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nexport var DEFAULT_HEIGHT = 30;\nexport var DEFAULT_WIDTH = 100; // Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCache =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCache() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCache);\n\n    _defineProperty(this, \"_cellHeightCache\", {});\n\n    _defineProperty(this, \"_cellWidthCache\", {});\n\n    _defineProperty(this, \"_columnWidthCache\", {});\n\n    _defineProperty(this, \"_rowHeightCache\", {});\n\n    _defineProperty(this, \"_defaultHeight\", void 0);\n\n    _defineProperty(this, \"_defaultWidth\", void 0);\n\n    _defineProperty(this, \"_minHeight\", void 0);\n\n    _defineProperty(this, \"_minWidth\", void 0);\n\n    _defineProperty(this, \"_keyMapper\", void 0);\n\n    _defineProperty(this, \"_hasFixedHeight\", void 0);\n\n    _defineProperty(this, \"_hasFixedWidth\", void 0);\n\n    _defineProperty(this, \"_columnCount\", 0);\n\n    _defineProperty(this, \"_rowCount\", 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      var key = _this._keyMapper(0, index);\n\n      return _this._columnWidthCache[key] !== undefined ? _this._columnWidthCache[key] : _this._defaultWidth;\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      var key = _this._keyMapper(index, 0);\n\n      return _this._rowHeightCache[key] !== undefined ? _this._rowHeightCache[key] : _this._defaultHeight;\n    });\n\n    var defaultHeight = params.defaultHeight,\n        defaultWidth = params.defaultWidth,\n        fixedHeight = params.fixedHeight,\n        fixedWidth = params.fixedWidth,\n        keyMapper = params.keyMapper,\n        minHeight = params.minHeight,\n        minWidth = params.minWidth;\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n\n  _createClass(CellMeasurerCache, [{\n    key: \"clear\",\n    value: function clear(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellHeightCache[_key] !== undefined ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellWidthCache[_key2] !== undefined ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      return this._cellHeightCache[key] !== undefined;\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      } // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n\n\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"_updateCachedColumnAndRowSizes\",\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n\n        var columnKey = this._keyMapper(0, columnIndex);\n\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n\n        var rowKey = this._keyMapper(rowIndex, 0);\n\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCache;\n}();\n\nexport { CellMeasurerCache as default };\n\nfunction defaultKeyMapper(rowIndex, columnIndex) {\n  return \"\".concat(rowIndex, \"-\").concat(columnIndex);\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";","import CellMeasurer from './CellMeasurer';\nimport CellMeasurerCache from './CellMeasurerCache';\nexport default CellMeasurer;\nexport { CellMeasurer, CellMeasurerCache };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize'; // @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nvar IS_SCROLLING_TIMEOUT = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent);\n\n  // Invokes callbacks only when their values have changed.\n  function CollectionView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CollectionView)).call.apply(_getPrototypeOf2, [this].concat(args))); // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateSizeAndPositionDataOnNextUpdate\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnSectionRenderedHelper\", function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateScrollPositionForScrollToCell\", function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._enablePointerEventsAfterDelay(); // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n\n\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop)); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED; // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    });\n\n    _this._scrollbarSize = getScrollbarSize();\n\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          cellLayoutManager = _this$props4.cellLayoutManager,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToCell = _this$props4.scrollToCell,\n          scrollTop = _this$props4.scrollTop; // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      } // Update onSectionRendered callback.\n\n\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width; // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props5 = this.props,\n          height = _this$props5.height,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToCell = _this$props5.scrollToCell,\n          width = _this$props5.width;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollPositionChangeReason = _this$state2.scrollPositionChangeReason,\n          scrollTop = _this$state2.scrollTop; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Update scroll offsets if the current :scrollToCell values requires it\n\n\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoHeight = _this$props6.autoHeight,\n          cellCount = _this$props6.cellCount,\n          cellLayoutManager = _this$props6.cellLayoutManager,\n          className = _this$props6.className,\n          height = _this$props6.height,\n          horizontalOverscanSize = _this$props6.horizontalOverscanSize,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          style = _this$props6.style,\n          verticalOverscanSize = _this$props6.verticalOverscanSize,\n          width = _this$props6.width;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollLeft = _this$state3.scrollLeft,\n          scrollTop = _this$state3.scrollTop; // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width; // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      }; // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0; // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Collection', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: \"grid\",\n        style: _objectSpread({}, collectionStyle, {}, style),\n        tabIndex: 0\n      }, cellCount > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Collection__innerScrollContainer\",\n        style: {\n          height: totalHeight,\n          maxHeight: totalHeight,\n          maxWidth: totalWidth,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          width: totalWidth\n        }\n      }, childrenToDisplay), cellCount === 0 && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_enablePointerEventsAfterDelay\",\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n        isScrollingChange(false);\n        _this2._disablePointerEventsTimeoutId = null;\n\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref) {\n      var _this3 = this;\n\n      var scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          totalHeight = _ref.totalHeight,\n          totalWidth = _ref.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref2) {\n          var scrollLeft = _ref2.scrollLeft,\n              scrollTop = _ref2.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_setScrollPosition\",\n    value: function _setScrollPosition(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\n_defineProperty(CollectionView, \"defaultProps\", {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n});\n\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n  isScrollingChange: PropTypes.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\npolyfill(CollectionView);\nexport default CollectionView;","var bpfrpt_proptype_Index = process.env.NODE_ENV === 'production' ? null : {\n  \"index\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_PositionInfo = process.env.NODE_ENV === 'production' ? null : {\n  \"x\": PropTypes.number.isRequired,\n  \"y\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_ScrollPosition = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollLeft\": PropTypes.number.isRequired,\n  \"scrollTop\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_SizeAndPositionInfo = process.env.NODE_ENV === 'production' ? null : {\n  \"height\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"x\": PropTypes.number.isRequired,\n  \"y\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_SizeInfo = process.env.NODE_ENV === 'production' ? null : {\n  \"height\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_Index };\nexport { bpfrpt_proptype_PositionInfo };\nexport { bpfrpt_proptype_ScrollPosition };\nexport { bpfrpt_proptype_SizeAndPositionInfo };\nexport { bpfrpt_proptype_SizeInfo };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\nvar Section =\n/*#__PURE__*/\nfunction () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: \"addCellIndex\",\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: \"getCellIndices\",\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.x, \",\").concat(this.y, \" \").concat(this.width, \"x\").concat(this.height);\n    }\n  }]);\n\n  return Section;\n}();\n\nexport { Section as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\nimport Section from './Section';\nvar SECTION_SIZE = 100;\n\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\nvar SectionManager =\n/*#__PURE__*/\nfunction () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: \"getCellIndices\",\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n      var indices = {};\n      this.getSections({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      }); // Object keys are strings; this function returns numbers\n\n      return Object.keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: \"getCellMetadata\",\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n      return this._cellMetadata[index];\n    }\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: \"getSections\",\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = \"\".concat(sectionX, \".\").concat(sectionY);\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: \"getTotalSectionCount\",\n    value: function getTotalSectionCount() {\n      return Object.keys(this._sections).length;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n\n      return Object.keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: \"registerCell\",\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n      this._cellMetadata[index] = cellMetadatum;\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport { SectionManager as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error(\"Invalid metadata returned for cell \".concat(index, \":\\n        x:\").concat(cellMetadatum.x, \", y:\").concat(cellMetadatum.y, \", width:\").concat(cellMetadatum.width, \", height:\").concat(cellMetadatum.height));\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this, props, context));\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = []; // Cell cache during scroll (for performance)\n\n    _this._cellCache = [];\n    _this._isScrollingChange = _this._isScrollingChange.bind(_assertThisInitialized(_this));\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"forceUpdate\",\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n    /** React lifecycle methods */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _extends({}, this.props);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n    /** CellLayoutManager interface */\n\n  }, {\n    key: \"calculateSizeAndPositionData\",\n    value: function calculateSizeAndPositionData() {\n      var _this$props = this.props,\n          cellCount = _this$props.cellCount,\n          cellSizeAndPositionGetter = _this$props.cellSizeAndPositionGetter,\n          sectionSize = _this$props.sectionSize;\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: \"getLastRenderedIndices\",\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: \"getScrollPositionForCell\",\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: \"cellRenderers\",\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _this$props2 = this.props,\n          cellGroupRenderer = _this$props2.cellGroupRenderer,\n          cellRenderer = _this$props2.cellRenderer; // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({\n            index: index\n          });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: \"_isScrollingChange\",\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: \"_setCollectionViewRef\",\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\n_defineProperty(Collection, \"defaultProps\", {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n});\n\nexport { Collection as default };\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({\n      index: index\n    });\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    }; // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n\nimport { bpfrpt_proptype_ScrollPosition } from \"./types\";\nimport { bpfrpt_proptype_SizeInfo } from \"./types\";","import Collection from './Collection';\nexport default Collection;\nexport { Collection };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    var _this;\n\n    _classCallCheck(this, ColumnSizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnSizer).call(this, props, context));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          columnMaxWidth = _this$props.columnMaxWidth,\n          columnMinWidth = _this$props.columnMinWidth,\n          columnCount = _this$props.columnCount,\n          width = _this$props.width;\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          columnMaxWidth = _this$props2.columnMaxWidth,\n          columnMinWidth = _this$props2.columnMinWidth,\n          columnCount = _this$props2.columnCount,\n          width = _this$props2.width;\n      var safeColumnMinWidth = columnMinWidth || 1;\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport { ColumnSizer as default };\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","import ColumnSizer from './ColumnSizer';\nexport default ColumnSizer;\nexport { ColumnSizer };","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    var _this;\n\n    _classCallCheck(this, InfiniteLoader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfiniteLoader).call(this, props, context));\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n    _this._onRowsRendered = _this._onRowsRendered.bind(_assertThisInitialized(_this));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: \"resetLoadMoreRowsCache\",\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_loadUnloadedRanges\",\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_onRowsRendered\",\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: \"_doStuff\",\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _this$props = this.props,\n          isRowLoaded = _this$props.isRowLoaded,\n          minimumBatchSize = _this$props.minimumBatchSize,\n          rowCount = _this$props.rowCount,\n          threshold = _this$props.threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      }); // For memoize comparison\n\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: {\n          squashedUnloadedRanges: squashedUnloadedRanges\n        }\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\n_defineProperty(InfiniteLoader, \"defaultProps\", {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n});\n\nexport { InfiniteLoader as default };\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\n\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({\n      index: index\n    });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  } // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n\n\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({\n        index: _index\n      })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  } // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n\n\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({\n        index: _index2\n      })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\n\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","import InfiniteLoader from './InfiniteLoader';\nexport default InfiniteLoader;\nexport { InfiniteLoader };","import * as React from 'react';\nvar bpfrpt_proptype_RowRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"index\": PropTypes.number.isRequired,\n  \"isScrolling\": PropTypes.bool.isRequired,\n  \"isVisible\": PropTypes.bool.isRequired,\n  \"key\": PropTypes.string.isRequired,\n  \"parent\": PropTypes.object.isRequired,\n  \"style\": PropTypes.object.isRequired\n};\nvar bpfrpt_proptype_RowRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_RenderedRows = process.env.NODE_ENV === 'production' ? null : {\n  \"overscanStartIndex\": PropTypes.number.isRequired,\n  \"overscanStopIndex\": PropTypes.number.isRequired,\n  \"startIndex\": PropTypes.number.isRequired,\n  \"stopIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_Scroll = process.env.NODE_ENV === 'production' ? null : {\n  \"clientHeight\": PropTypes.number.isRequired,\n  \"scrollHeight\": PropTypes.number.isRequired,\n  \"scrollTop\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_RowRendererParams };\nexport { bpfrpt_proptype_RowRenderer };\nexport { bpfrpt_proptype_RenderedRows };\nexport { bpfrpt_proptype_Scroll };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"Grid\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRenderer\", function (_ref) {\n      var parent = _ref.parent,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style,\n          isScrolling = _ref.isScrolling,\n          isVisible = _ref.isVisible,\n          key = _ref.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (ref) {\n      _this.Grid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (_ref2) {\n      var clientHeight = _ref2.clientHeight,\n          scrollHeight = _ref2.scrollHeight,\n          scrollTop = _ref2.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref3) {\n      var rowOverscanStartIndex = _ref3.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref3.rowOverscanStopIndex,\n          rowStartIndex = _ref3.rowStartIndex,\n          rowStopIndex = _ref3.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4) {\n      var alignment = _ref4.alignment,\n          index = _ref4.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$columnIndex = _ref6.columnIndex,\n          columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n          _ref6$rowIndex = _ref6.rowIndex,\n          rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          scrollToIndex = _this$props.scrollToIndex,\n          width = _this$props.width;\n      var classNames = clsx('ReactVirtualized__List', className);\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /** Optional CSS class name */\n  \"className\": PropTypes.string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  \"noRowsRenderer\": function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  \"onRowsRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  \"rowRenderer\": function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === \"function\" ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToIndex\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of list */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { List as default };\nimport { bpfrpt_proptype_NoContentRenderer } from \"../Grid\";\nimport { bpfrpt_proptype_Alignment } from \"../Grid\";\nimport { bpfrpt_proptype_CellSize } from \"../Grid\";\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"../Grid\";\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_CellRendererParams } from \"../Grid\";\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from \"../Grid\";\nimport { bpfrpt_proptype_RowRenderer } from \"./types\";\nimport { bpfrpt_proptype_RenderedRows } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport PropTypes from \"prop-types\";","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport createIntervalTree from '../vendor/intervalTree';\n\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache =\n/*#__PURE__*/\nfunction () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    _defineProperty(this, \"_columnSizeMap\", {});\n\n    _defineProperty(this, \"_intervalTree\", createIntervalTree());\n\n    _defineProperty(this, \"_leftMap\", {});\n  }\n\n  _createClass(PositionCache, [{\n    key: \"estimateTotalHeight\",\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    } // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: \"range\",\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n\n      this._leftMap[index] = left;\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: \"shortestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: \"tallestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport { PositionCache as default };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          cellCount = _this$props.cellCount,\n          cellMeasurerCache = _this$props.cellMeasurerCache,\n          cellRenderer = _this$props.cellRenderer,\n          className = _this$props.className,\n          height = _this$props.height,\n          id = _this$props.id,\n          keyMapper = _this$props.keyMapper,\n          overscanByPixels = _this$props.overscanByPixels,\n          role = _this$props.role,\n          style = _this$props.style,\n          tabIndex = _this$props.tabIndex,\n          width = _this$props.width,\n          rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n          isScrolling = _this$state.isScrolling,\n          scrollTop = _this$state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n          cellCount = _this$props2.cellCount,\n          cellMeasurerCache = _this$props2.cellMeasurerCache,\n          width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n          height = _this$props3.height,\n          onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n          cellMeasurerCache = _this$props4.cellMeasurerCache,\n          cellPositioner = _this$props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            left = _cellPositioner.left,\n            top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","export default function createCellPositioner(_ref) {\n  var cellMeasurerCache = _ref.cellMeasurerCache,\n      columnCount = _ref.columnCount,\n      columnWidth = _ref.columnWidth,\n      _ref$spacer = _ref.spacer,\n      spacer = _ref$spacer === void 0 ? 0 : _ref$spacer;\n  var columnHeights;\n  initOrResetDerivedValues();\n\n  function cellPositioner(index) {\n    // Find the shortest column and use it.\n    var columnIndex = 0;\n\n    for (var i = 1; i < columnHeights.length; i++) {\n      if (columnHeights[i] < columnHeights[columnIndex]) {\n        columnIndex = i;\n      }\n    }\n\n    var left = columnIndex * (columnWidth + spacer);\n    var top = columnHeights[columnIndex] || 0;\n    columnHeights[columnIndex] = top + cellMeasurerCache.getHeight(index) + spacer;\n    return {\n      left: left,\n      top: top\n    };\n  }\n\n  function initOrResetDerivedValues() {\n    // Track the height of each column.\n    // Layout algorithm below always inserts into the shortest column.\n    columnHeights = [];\n\n    for (var i = 0; i < columnCount; i++) {\n      columnHeights[i] = 0;\n    }\n  }\n\n  function reset(params) {\n    columnCount = params.columnCount;\n    columnWidth = params.columnWidth;\n    spacer = params.spacer;\n    initOrResetDerivedValues();\n  }\n\n  cellPositioner.reset = reset;\n  return cellPositioner;\n}\nimport { bpfrpt_proptype_CellMeasurerCache } from \"./Masonry\";\nimport { bpfrpt_proptype_Positioner } from \"./Masonry\";","import createCellPositioner from './createCellPositioner';\nimport Masonry from './Masonry';\nexport default Masonry;\nexport { createCellPositioner, Masonry };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { CellMeasurerCache } from '../CellMeasurer';\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    _defineProperty(this, \"_cellMeasurerCache\", void 0);\n\n    _defineProperty(this, \"_columnIndexOffset\", void 0);\n\n    _defineProperty(this, \"_rowIndexOffset\", void 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport { CellMeasurerCacheDecorator as default };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    _classCallCheck(this, MultiGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","import MultiGrid from './MultiGrid';\nexport default MultiGrid;\nexport { MultiGrid };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    var _this;\n\n    _classCallCheck(this, ScrollSync);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollSync).call(this, props, context));\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state = this.state,\n          clientHeight = _this$state.clientHeight,\n          clientWidth = _this$state.clientWidth,\n          scrollHeight = _this$state.scrollHeight,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop,\n          scrollWidth = _this$state.scrollWidth;\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport { ScrollSync as default };\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","import ScrollSync from './ScrollSync';\nexport default ScrollSync;\nexport { ScrollSync };","var bpfrpt_proptype_CellDataGetterParams = process.env.NODE_ENV === 'production' ? null : {\n  \"columnData\": PropTypes.any,\n  \"dataKey\": PropTypes.string.isRequired,\n  \"rowData\": function rowData(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  }\n};\nvar bpfrpt_proptype_CellRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"cellData\": PropTypes.any,\n  \"columnData\": PropTypes.any,\n  \"dataKey\": PropTypes.string.isRequired,\n  \"rowData\": function rowData(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"rowIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_HeaderRowRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"className\": PropTypes.string.isRequired,\n  \"columns\": PropTypes.arrayOf(function (props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  }).isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  }\n};\nvar bpfrpt_proptype_HeaderRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"columnData\": PropTypes.any,\n  \"dataKey\": PropTypes.string.isRequired,\n  \"disableSort\": PropTypes.bool,\n  \"label\": PropTypes.any,\n  \"sortBy\": PropTypes.string,\n  \"sortDirection\": PropTypes.string\n};\nvar bpfrpt_proptype_RowRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"className\": PropTypes.string.isRequired,\n  \"columns\": PropTypes.arrayOf(function (props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  }).isRequired,\n  \"index\": PropTypes.number.isRequired,\n  \"isScrolling\": PropTypes.bool.isRequired,\n  \"onRowClick\": PropTypes.func,\n  \"onRowDoubleClick\": PropTypes.func,\n  \"onRowMouseOver\": PropTypes.func,\n  \"onRowMouseOut\": PropTypes.func,\n  \"rowData\": function rowData(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"key\": PropTypes.string.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellDataGetterParams };\nexport { bpfrpt_proptype_CellRendererParams };\nexport { bpfrpt_proptype_HeaderRowRendererParams };\nexport { bpfrpt_proptype_HeaderRendererParams };\nexport { bpfrpt_proptype_RowRendererParams };","/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";","/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from \"./types\";","import * as React from 'react';\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n  return React.createElement(\"div\", {\n    className: className,\n    role: \"row\",\n    style: style\n  }, columns);\n}\ndefaultHeaderRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRowRendererParams;\nimport { bpfrpt_proptype_HeaderRowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\nexport default SortDirection;","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\n\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n  return React.createElement(\"svg\", {\n    className: classNames,\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 24 24\"\n  }, sortDirection === SortDirection.ASC ? React.createElement(\"path\", {\n    d: \"M7 14l5-5 5 5z\"\n  }) : React.createElement(\"path\", {\n    d: \"M7 10l5 5 5-5z\"\n  }), React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }));\n}\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n\n/**\n * Default table header renderer.\n */\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement(\"span\", {\n    className: \"ReactVirtualized__Table__headerTruncatedText\",\n    key: \"label\",\n    title: typeof label === 'string' ? label : null\n  }, label)];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, {\n      key: \"SortIndicator\",\n      sortDirection: sortDirection\n    }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\n\n/**\n * Default row renderer for Table.\n */\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n  var a11yProps = {\n    'aria-rowindex': index + 1\n  };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n  }\n\n  return React.createElement(\"div\", _extends({}, a11yProps, {\n    className: className,\n    key: key,\n    role: \"row\",\n    style: style\n  }), columns);\n}\ndefaultRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_RowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_RowRendererParams;\nimport { bpfrpt_proptype_RowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Column).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\n_defineProperty(Column, \"defaultProps\", {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n});\n\nexport { Column as default };\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          disableHeader = _this$props.disableHeader,\n          gridClassName = _this$props.gridClassName,\n          gridStyle = _this$props.gridStyle,\n          headerHeight = _this$props.headerHeight,\n          headerRowRenderer = _this$props.headerRowRenderer,\n          height = _this$props.height,\n          id = _this$props.id,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          rowClassName = _this$props.rowClassName,\n          rowStyle = _this$props.rowStyle,\n          scrollToIndex = _this$props.scrollToIndex,\n          style = _this$props.style,\n          width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _this$props2 = this.props,\n          headerClassName = _this$props2.headerClassName,\n          headerStyle = _this$props2.headerStyle,\n          onHeaderClick = _this$props2.onHeaderClick,\n          sort = _this$props2.sort,\n          sortBy = _this$props2.sortBy,\n          sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          onRowClick = _this$props3.onRowClick,\n          onRowDoubleClick = _this$props3.onRowDoubleClick,\n          onRowRightClick = _this$props3.onRowRightClick,\n          onRowMouseOver = _this$props3.onRowMouseOver,\n          onRowMouseOut = _this$props3.onRowMouseOut,\n          rowClassName = _this$props3.rowClassName,\n          rowGetter = _this$props3.rowGetter,\n          rowRenderer = _this$props3.rowRenderer,\n          rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";","import createMultiSort from './createMultiSort';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer.js';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport Column from './Column';\nimport SortDirection from './SortDirection';\nimport SortIndicator from './SortIndicator';\nimport Table from './Table';\nexport default Table;\nexport { createMultiSort, defaultCellDataGetter, defaultCellRenderer, defaultHeaderRowRenderer, defaultHeaderRenderer, defaultRowRenderer, Column, SortDirection, SortIndicator, Table };","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    document.body.style.pointerEvents = 'none';\n  }\n\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n\n  mountedInstances.push(component);\n}\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from \"../WindowScroller.js\";","/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\n// TODO Move this into WindowScroller and import from there\nvar isWindow = function isWindow(element) {\n  return element === window;\n};\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\n\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n\n    var _elementRect = getBoundingBox(element);\n\n    var _containerRect = getBoundingBox(container);\n\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\n\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WindowScroller)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", getWindow());\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromTop\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromLeft\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onChildScroll\", function (_ref) {\n      var scrollTop = _ref.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerResizeListener\", function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_unregisterResizeListener\", function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__handleWindowScrollEvent\", function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n        var scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n        var scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        onScroll({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__resetIsScrolling\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(WindowScroller, [{\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n      this._detectElementResize = createDetectElementResize();\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state2 = this.state,\n          isScrolling = _this$state2.isScrolling,\n          scrollTop = _this$state2.scrollTop,\n          scrollLeft = _this$state2.scrollLeft,\n          height = _this$state2.height,\n          width = _this$state2.width;\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    }\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  \"children\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  \"scrollElement\": PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === \"function\" ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Height used for server-side rendering */\n  \"serverHeight\": PropTypes.number.isRequired,\n\n  /** Width used for server-side rendering */\n  \"serverWidth\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(WindowScroller, \"defaultProps\", {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n});\n\nexport { WindowScroller as default };\nimport PropTypes from \"prop-types\";","import WindowScroller, { IS_SCROLLING_TIMEOUT } from './WindowScroller';\nexport default WindowScroller;\nexport { WindowScroller, IS_SCROLLING_TIMEOUT };"],"names":["calculateSizeAndPositionDataAndUpdateScrollOffset","_ref","cellCount","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","scrollToIndex","updateScrollOffsetForScrollToIndex","bpfrpt_proptype_CellPosition","bpfrpt_proptype_CellRendererParams","bpfrpt_proptype_CellRenderer","bpfrpt_proptype_CellCache","bpfrpt_proptype_StyleCache","bpfrpt_proptype_CellRangeRendererParams","bpfrpt_proptype_CellRangeRenderer","bpfrpt_proptype_CellSizeGetter","bpfrpt_proptype_CellSize","bpfrpt_proptype_NoContentRenderer","bpfrpt_proptype_Scroll","bpfrpt_proptype_ScrollbarPresenceChange","bpfrpt_proptype_RenderedSection","bpfrpt_proptype_OverscanIndicesGetterParams","bpfrpt_proptype_OverscanIndices","bpfrpt_proptype_OverscanIndicesGetter","bpfrpt_proptype_Alignment","bpfrpt_proptype_VisibleCellRange","CellSizeAndPositionManager","cellSizeGetter","estimatedCellSize","_ref2","index","lastMeasuredCellSizeAndPosition","offset","i","size","totalSizeOfMeasuredCells","numUnmeasuredCells","totalSizeOfUnmeasuredCells","_ref3","_ref3$align","align","containerSize","currentOffset","targetIndex","datum","maxOffset","minOffset","idealOffset","totalSize","params","start","stop","high","low","middle","interval","lastMeasuredIndex","DEFAULT_MAX_ELEMENT_SIZE","CHROME_MAX_ELEMENT_SIZE","isBrowser","isChrome","getMaxElementSize","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","safeTotalSize","offsetPercentage","_ref4","_ref5","_ref6","_ref7","createCallbackMemoizer","requireAllKeys","cachedIndices","callback","indices","keys","allInitialized","key","value","indexChanged","cachedValue","SCROLL_DIRECTION_BACKWARD","SCROLL_DIRECTION_FORWARD","SCROLL_DIRECTION_HORIZONTAL","SCROLL_DIRECTION_VERTICAL","defaultOverscanIndicesGetter","overscanCellsCount","scrollDirection","startIndex","stopIndex","updateScrollIndexHelper","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToAlignment","sizeJustIncreasedFromZero","updateScrollIndexCallback","hasScrollToIndex","sizeHasChanged","defaultCellRangeRenderer","cellCache","cellRenderer","columnSizeAndPositionManager","columnStartIndex","columnStopIndex","deferredMeasurementCache","horizontalOffsetAdjustment","isScrolling","isScrollingOptOut","parent","rowSizeAndPositionManager","rowStartIndex","rowStopIndex","styleCache","verticalOffsetAdjustment","visibleColumnIndices","visibleRowIndices","renderedCells","areOffsetsAdjusted","canCacheStyle","rowIndex","rowDatum","columnIndex","columnDatum","isVisible","style","cellRendererParams","renderedCell","warnAboutMissingStyle","win","request","cancel","id","raf","caf","bpfrpt_proptype_AnimationTimeoutId","cancelAnimationTimeout","frame","requestAnimationTimeout","delay","timeout","_class","_temp","ownKeys","object","enumerableOnly","symbols","sym","_objectSpread","target","source","DEFAULT_SCROLLING_RESET_TIME_INTERVAL","SCROLL_POSITION_CHANGE_REASONS","renderNull","Grid","_React$PureComponent","props","_this","onSectionRendered","ref","event","_ref$alignment","alignment","_ref$columnIndex","_ref$rowIndex","offsetProps","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_this$props","autoHeight","autoWidth","height","width","instanceProps","scrollbarSize","totalRowsHeight","totalColumnsWidth","scrollLeft","scrollTop","scrollDirectionHorizontal","scrollDirectionVertical","newState","_this$props2","columnCount","rowCount","_ref4$columnIndex","_ref4$rowIndex","_this$props3","scrollToColumn","scrollToRow","_this$props4","getScrollbarSize","prevState","stateUpdate","sizeIsBiggerThanZero","prevProps","_this2","_this$props5","_this$state","scrollPositionChangeReason","columnOrRowCountJustIncreasedFromZero","_this$props6","autoContainerWidth","className","containerProps","containerRole","containerStyle","noContentRenderer","role","tabIndex","_this$state2","needToResetStyleCache","gridStyle","verticalScrollBarSize","horizontalScrollBarSize","childrenToDisplay","showNoContentRenderer","state","cellRangeRenderer","overscanColumnCount","overscanIndicesGetter","overscanRowCount","overscanColumnIndices","overscanRowIndices","scrollingResetTimeInterval","_this3","_this3$props","onScroll","onScrollbarPresenceChange","_ref8","nextProps","maybeStateA","maybeStateB","_ref9","finalColumn","scrollBarSize","calculatedScrollLeft","finalRow","calculatedScrollTop","bpfrpt_proptype_ScrollIndices","ArrowKeyStepper","_getPrototypeOf2","_len","args","_key","disabled","mode","_this$_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","children","_this$_getScrollState3","isControlled","onScrollToChange","createDetectElementResize","nonce","hostWindow","_window","attachEvent","requestFrame","fn","cancelFrame","resetTriggers","element","triggers","expand","contract","expandChild","checkTriggers","scrollListener","e","animation","keyframeprefix","animationstartevent","domPrefixes","startEvents","pfx","elm","animationName","animationKeyframes","animationStyle","createStyles","doc","css","head","addResizeListener","elementStyle","resizeTriggersHtml","staticPolicy","removeResizeListener","AutoSizer","_React$Component","disableHeight","disableWidth","onResize","paddingLeft","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","autoSizer","outerStyle","childParams","bpfrpt_proptype_CellMeasureCache","CellMeasurer","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","node","styleWidth","styleHeight","_this$props2$columnIn","_this$props2$rowIndex","_this$_getCellMeasure2","DEFAULT_HEIGHT","DEFAULT_WIDTH","CellMeasurerCache","defaultKeyMapper","IS_SCROLLING_TIMEOUT","CollectionView","cellLayoutManager","scrollToCell","scrollPosition","isScrollingChange","_cellLayoutManager$ge","totalHeight","totalWidth","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_this$state3","_cellLayoutManager$ge3","left","top","right","bottom","collectionStyle","bpfrpt_proptype_Index","bpfrpt_proptype_PositionInfo","bpfrpt_proptype_ScrollPosition","bpfrpt_proptype_SizeAndPositionInfo","bpfrpt_proptype_SizeInfo","Section","x","y","SECTION_SIZE","SectionManager","sectionSize","section","sectionXStart","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","cellMetadatum","cellSizeAndPositionGetter","cellMetadata","sectionManager","getUpdatedOffsetForIndex","_ref$align","cellOffset","Collection","context","data","cellIndex","cellGroupRenderer","defaultCellGroupRenderer","cellRendererProps","ColumnSizer","columnMaxWidth","columnMinWidth","safeColumnMinWidth","safeColumnMaxWidth","columnWidth","adjustedWidth","child","InfiniteLoader","autoReload","unloadedRanges","loadMoreRows","unloadedRange","promise","isRangeVisible","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","scanForUnloadedRanges","squashedUnloadedRanges","registeredChild","lastRenderedStartIndex","lastRenderedStopIndex","rangeStartIndex","rangeStopIndex","loaded","potentialStopIndex","_index","firstUnloadedRange","_index2","component","currentIndex","recomputeSize","bpfrpt_proptype_RowRendererParams","bpfrpt_proptype_RowRenderer","bpfrpt_proptype_RenderedRows","List","rowRenderer","widthDescriptor","clientHeight","scrollHeight","rowOverscanStartIndex","rowOverscanStopIndex","onRowsRendered","_this$Grid$getOffsetF","_ref6$columnIndex","_ref6$rowIndex","noRowsRenderer","classNames","_GEA","a","l","h","m","_GEP","c","dispatchBsearchGE","_GTA","_GTP","dispatchBsearchGT","_LTA","_LTP","dispatchBsearchLT","_LEA","_LEP","dispatchBsearchLE","_EQA","_EQP","p","dispatchBsearchEQ","NOT_FOUND","SUCCESS","EMPTY","IntervalTreeNode","mid","leftPoints","rightPoints","proto","copy","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","rebuildWithoutInterval","idx","result","weight","compareBegin","r","compareEnd","rw","lw","reportLeftRange","arr","hi","cb","reportRightRange","lo","reportRange","compareNumbers","d","pts","leftIntervals","rightIntervals","centerIntervals","IntervalTree","root","tproto","createWrapper","PositionCache","defaultCellHeight","unmeasuredCellCount","renderCallback","_","columnSizeMap","columnHeight","emptyObject","Masonry","eventScrollTop","cellMeasurerCache","keyMapper","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","_style","batchSize","estimatedColumnCount","onCellsRendered","cellPositioner","_cellPositioner","identity","noop","bpfrpt_proptype_CellMeasurerCache","bpfrpt_proptype_Positioner","createCellPositioner","_ref$spacer","spacer","columnHeights","initOrResetDerivedValues","reset","CellMeasurerCacheDecorator","_params$columnIndexOf","columnIndexOffset","_params$rowIndexOffse","rowIndexOffset","SCROLLBAR_SIZE_BUFFER","MultiGrid","rest","fixedRowCount","fixedColumnCount","showHorizontalScrollbar","scrollInfo","horizontal","vertical","showVerticalScrollbar","rowHeight","_fixedColumnCount","_fixedRowCount","_ref7$columnIndex","_ref7$rowIndex","_ref8$columnIndex","_ref8$rowIndex","adjustedColumnIndex","adjustedRowIndex","_this$props7","_this$props8","scrollLeftProp","scrollTopProp","_this$state4","topGridHeight","leftGridWidth","resetAll","_this$props9","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","leftSizeChange","topSizeChange","hideBottomLeftGridScrollbar","additionalRowCount","gridWidth","bottomLeftGrid","hideTopRightGridScrollbar","_this$state5","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","ScrollSync","clientWidth","scrollWidth","bpfrpt_proptype_CellDataGetterParams","bpfrpt_proptype_HeaderRowRendererParams","bpfrpt_proptype_HeaderRendererParams","defaultCellDataGetter","dataKey","rowData","defaultCellRenderer","cellData","defaultHeaderRowRenderer","columns","SortDirection","SortIndicator","sortDirection","defaultHeaderRenderer","label","sortBy","showSortIndicator","defaultRowRenderer","onRowClick","onRowDoubleClick","onRowMouseOut","onRowMouseOver","onRowRightClick","a11yProps","Column","Table","_ref3$columnIndex","_ref3$rowIndex","_Grid","offsetWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","scrollbarWidth","availableRowsHeight","rowClass","rowStyleObject","column","flexStyles","onColumnClick","_column$props","cellDataGetter","columnData","onClick","title","headerClassName","headerStyle","onHeaderClick","sort","_column$props2","defaultSortDirection","disableSort","headerRenderer","sortEnabled","renderedHeader","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","isFirstTimeSort","newSortDirection","onKeyDown","rowGetter","flattenedStyle","customStyle","flexValue","_this4","items","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","enablePointerEventsAfterDelayCallback","instance","enablePointerEventsAfterDelay","maximumTimeout","onScrollWindow","registerScrollListener","unregisterScrollListener","isWindow","getBoundingBox","getDimensions","scrollElement","innerHeight","innerWidth","getPositionOffset","container","containerElement","elementRect","containerRect","getScrollOffset","_elementRect","_containerRect","getWindow","WindowScroller","thisNode","dimensions","prevScrollElement"],"sourceRoot":""}