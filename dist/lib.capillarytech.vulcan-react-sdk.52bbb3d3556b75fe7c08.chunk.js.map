{"version":3,"file":"lib.capillarytech.vulcan-react-sdk.52bbb3d3556b75fe7c08.chunk.js","mappings":"8uBAEA,MAAMA,EAAS,+CAEf,KAAe,MAAe,CAC5B,gBAAiB,CACf,GAAI,GAAGA,oBACP,eAAgB,kBAClB,EACA,cAAe,CACb,GAAI,GAAGA,kBACP,eAAgB,gDAClB,CACF,CAAC,E,kFCXD,WAAe;AAAA;AAAA;AAAA,E,6UCOf,MAAMC,EAAkB,CAAC,CAAE,UAAAC,EAAW,QAAAC,CAAQ,IAE1C,kBAACC,EAAA,EAAM,CAAC,UAAAF,CAAA,EACN,kBAACG,EAAA,EAAU,CAAC,KAAK,MACf,kBAAC,KAAgB,KAAKC,EAAS,eAAe,CAAE,CAClD,EACA,kBAACD,EAAA,EAAU,CAAC,KAAK,MACf,kBAAC,KAAgB,KAAKC,EAAS,aAAa,CAAE,CAChD,EACA,kBAACC,EAAA,EAAS,CAAC,QAAS,IAAMJ,EAAQ,KAAK,GAAG,GAAG,gCAA8B,CAC7E,EAIJ,KAAeK,EAAA,GAAWP,EAAiBQ,CAAM,C,ysCCpBjD,KAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAQL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,E,8ECIV,SAASC,EAAqBC,EAAO,CACnC,KAAM,CAACC,EAAUC,CAAW,KAAI,YAAS,EAAE,EACrC,CAACC,EAAUC,CAAW,KAAI,YAAS,EAAE,EACrC,CAACC,EAAcC,CAAmB,KAAI,YAAS,EAAK,EAEpD,CACJ,YAAAC,EACA,cAAAC,EACA,cAAAC,EACA,YAAAC,EAAc,GACd,UAAAC,EACA,UAAAC,CACF,EAAIZ,EAEEa,KAAmB,eAAaC,GAAU,CAC9CZ,EAAYY,EAAM,OAAO,KAAK,CAChC,EAAG,CAAC,CAAC,EAECC,KAAuB,eAAaD,GAAU,CAClDV,EAAYU,EAAM,OAAO,KAAK,CAChC,EAAG,CAAC,CAAC,EAECE,KAAqB,eAAY,IAAM,CAC3CV,EAAqBW,GAAU,CAACA,CAAK,CACvC,EAAG,CAAC,CAAC,EAECC,KAAY,eAAY,IAAM,CAClC,MAAMC,EAAO,CACX,SAAUlB,EACV,SAAAE,CACF,EACMiB,EAAU,CACd,eAAgB,kBAClB,EAEMC,EAAa,CACjB,OAAQ,OACR,QAAS,IAAI,QAAQD,CAAO,CAC9B,EACA,OAAAC,EAAW,KAAO,KAAK,UAAUF,CAAI,EAGnCE,EAAW,YAAc,aAGpB,KAAQ,GAAGX,IAAeW,CAAU,CAC7C,EAAG,CAACX,EAAaP,EAAUF,CAAQ,CAAC,EAE9BqB,KAAc,eAAY,IAAM,CAChCZ,IACFM,EAAmB,EACnBE,EAAU,EACP,KAAMK,GAAQ,CAEb,GADAP,EAAmB,EACf,CAACO,EAAI,QAAS,CAChBX,EAAUW,CAAG,EACb,MACF,CACIZ,GAAWA,EAAUY,CAAG,CAC9B,CAAC,EACA,MAAOC,GAAQ,CACdR,EAAmB,EACfJ,GAAWA,EAAUY,CAAG,CAC9B,CAAC,EAEP,EAAG,CAACd,EAAaE,EAAWD,EAAWO,EAAWF,CAAkB,CAAC,EAErE,OACE,kBAAC,OAAI,UAAW,GAAGhB,EAAM,uBACvB,kBAACyB,EAAA,EAAO,CAAC,SAAUpB,CAAA,EACjB,kBAAC,WAAQ,UAAU,uBACjB,kBAACqB,EAAA,EAAO,CAAC,UAAU,kBACjB,kBAACC,EAAA,EAAQ,CAAC,UAAU,iBAAiB,IAAK,CAAa,CAAE,EACzD,kBAACjC,EAAA,EAAU,CAAC,UAAU,oBAAoB,KAAK,MAC5Ca,CACH,EACA,kBAACqB,EAAA,GACC,UAAU,kBACV,cAAc,MACd,MAAOpB,EACP,MAAOP,EACP,SAAUY,EACV,WAAU,GACZ,EACA,kBAACe,EAAA,GACC,KAAK,WACL,UAAU,kBACV,cAAc,MACd,MAAOnB,EACP,MAAON,EACP,SAAUY,EACV,WAAU,GACZ,EACA,kBAAC,OAAI,UAAU,0BACb,kBAACnB,EAAA,EAAS,CAAC,UAAU,mBAAmB,QAAS0B,EAAa,SAAW,IAAQrB,GAAA,YAAAA,EAAU,KAAK,CAAC,GAAK,IAAQE,GAAA,YAAAA,EAAU,KAAK,CAAC,GAC3HI,CACH,CACF,CACF,CACF,CACF,CACF,CAEJ,CAEAR,EAAqB,UAAY,CAC/B,UAAW,SACX,UAAW,SACX,YAAa,WACb,cAAe,WACf,cAAe,WACf,YAAa,WAAiB,UAChC,EAEA,WAAeF,EAAA,GAAWE,EAAsB8B,CAAM,C,0eC/HtD,WAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECKFC,EAAQ,6CAErB,KAAe,MAAe,CAC5B,OAAQ,CACN,GAAI,GAAGA,WACP,eAAgB,0BAClB,CACF,CAAC,E,olBCJD,MAAMC,EAAU,KAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQjBC,EAAU,KAAO;AAAA;AAAA;AAAA,EAKjBC,EAAgB,GAAwB,CAAxB,QAAE,UAAAC,CAvBxB,EAuBsB,EAAelC,EAAA,EAAf,EAAe,CAAb,aACtB,yBAAC+B,EAAA,KAAY/B,CAAK,EAChB,kBAACgC,EAAA,KAASE,CAAS,CACrB,GAGWC,EAAe,IAC1B,kBAACF,EAAA,KACC,kBAACN,EAAA,EAAQ,CAAC,IAAK,CAAa,CAAE,EAC9B,kBAACjC,EAAA,EAAU,CAAC,KAAK,MACf,kBAAC,KAAgB,KAAKC,EAAS,MAAM,CAAE,CACzC,CACF,EAGF,KAAeE,EAAA,GAAWsC,EAAcrC,CAAM,C,2pCC9B/B,SAASsC,EAAMpC,EAAO,CACnC,KAAM,CAAE,QAAAqC,CAAQ,KAAI,KAAiB,GAAK,CAAC,EACrCC,EAAmB,aAAa,QAAQ,GAAGD,iBAAuB,IAAM,OAC9E,OACE,kBAAC,OAAI,UAAU,6BAEXC,EACE,kBAAC,IAA2B,CAAC,MAAOtC,EAAM,OACxC,kBAAC,IAAQ,GAAC,IAAK,CAAe,EAAMA,CAAK,CAAE,EAC3C,kBAAC,IAAU,CAAC,KAAK,MACf,kBAAC,KAAgB,KAAK,IAAS,YAAY,CAAE,CAC/C,CACF,EAEA,kBAAC,IAAyB,CAAC,MAAOA,EAAM,OACtC,kBAAC,IAAQ,GAAC,IAAK,CAAe,EAAMA,CAAK,CAAE,EAC3C,kBAAC,IAAU,CAAC,KAAK,MACf,kBAAC,KAAgB,KAAK,IAAS,YAAY,CAAE,CAC/C,CACF,CAGN,CAEJ,C,mLCxBO,MAAM8B,EAAQ,yCAErB,KAAe,MAAe,CAC5B,aAAc,CACZ,GAAI,GAAGA,iBACP,eAAgB,wCAClB,CACF,CAAC,C,sNCbM,MAAMS,EAA4B,KAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAWlCvC,GAAUA,EAAM,OAAS;AAAA;AAAA,EAI1BwC,EAA8B,KAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAWpCxC,GAAUA,EAAM,OAAS;AAAA;AAAA,C,0MCtBxB,SAASyC,EAAWC,EAAO,CACxC,MAAMC,EAAQ,CACZ,SAAU,aACV,UAAW,aACX,SAAU,aACV,eAAgB,aAChB,QAAS,aACT,iBAAkB,WAClB,cAAe,UACjB,EACA,OACE,cAAWD,EAAOC,CAAK,EACvB,wDACF,CACF,C,yGCXA,SAASC,EAAkBC,EAAmBC,EAAQ,CAAC,EAAG,CACtD,KAAM,CAAE,MAAAhB,EAAO,OAAAzC,EAAS,EAAG,EAAIyD,EAE/B,GAAI,OAAOhB,GAAU,UAAYA,EAAM,KAAK,IAAM,GAC9C,MAAM,IAAI,MAAM,kDAAkD,EAGtE,MAAMiB,EAAkB,CAAC,EACzB,UAAWC,KAAOH,EACVA,EAAkB,eAAeG,CAAG,IACpCD,EAAgBC,CAAG,EAAI,GAAG3D,IAASyC,IAAQe,EAAkBG,CAAG,KAIxE,OAAO,IAAI,MAAMD,EAAiB,CAC9B,IAAK,SAASE,EAAQC,EAAM,CACxB,GAAI,EAAEA,KAAQD,GACV,MAAM,IAAI,MAAM,aAAaC,mDAAsD,EAEvF,OAAOD,EAAOC,CAAI,CACtB,CACJ,CAAC,CACL,CAEA,QAAeN,C,qiBC3BR,SAASO,EAAqBT,EAAOU,EAAS,CACnD,OAAO,SAAuBJ,EAAKK,EAAS,CACrCD,MAASX,EAAA,GAAWC,CAAK,EAE9B,OACE,YAASM,CAAG,GAAK,IAAC,WAAQA,CAAG,MAAK,cAAWK,CAAO,EACpD,2EACF,EAIE,UAAQ,IAAIX,EAAM,iBAAkBM,CAAG,GACvCN,EAAM,iBAAiBM,CAAG,IAAMK,KAIlCX,EAAM,iBAAiBM,CAAG,EAAIK,EAC9BX,EAAM,kBAAe,KAAcA,EAAM,iBAAkBA,EAAM,eAAgBA,EAAM,cAAc,CAAC,EACxG,CACF,CAEe,SAASY,EAAaZ,EAAO,CAC1C,SAAAD,EAAA,GAAWC,CAAK,EAET,CACL,cAAeS,EAAqBT,EAAO,EAAI,CACjD,CACF,C,2mBCpBA,QAAe,CAAC,CAAE,IAAAM,EAAK,QAAAK,CAAQ,IAAME,GAAoB,CACvD,MAAMC,UAAwB,aAAgB,CAA9C,kCAiBE,mBAAYF,EAAa,KAAK,QAAQ,KAAK,CAAC,CAAD,CAN3C,oBAAqB,CACnB,KAAM,CAAE,cAAAG,CAAc,EAAI,KAAK,UAE/BA,EAAcT,EAAKK,CAAO,CAC5B,CAIA,QAAS,CACP,MAAwC,OAAK,MAArC,cAAAK,CAlCd,EAkC8C,EAAfC,EAAA,EAAe,EAAf,CAAjB,iBACR,OAAO,kBAACJ,EAAA,OAAqBI,CAAU,EAA/B,CAAiC,IAAKD,CAAA,EAAc,CAC9D,CACF,CAtBE,EADIF,EACG,mBAAmBD,CAAgB,EAE1C,EAHIC,EAGG,eAAe,CACpB,MAAO,WAAiB,UAC1B,CAAC,EAED,EAPIA,EAOG,cAAc,eAAeD,EAAiB,aACnDA,EAAiB,MACjB,gBAgBJ,MAAMK,EAAgC,eAAiB,CAAC5D,EAAO6D,IAC7D,kBAACL,EAAA,OAAoBxD,CAAK,EAAzB,CAA2B,aAAc6D,CAAA,EAAK,CAChD,EAED,OAAO,IAAqBD,EAA+BL,CAAgB,CAC7E,C,o8BCtCA,MAAMO,EAAe,CAAC,KAAoB,KAAQ,IAAiB,EAE7DC,EAAWf,GACf,OACE,YAASA,CAAG,GAAK,IAAC,WAAQA,CAAG,EAC7B,oEACF,EAEIgB,EAAkBC,GAAc,CACpC,MAAMtB,EAAQ,CACZ,KAAM,aACN,KAAMuB,MAAQ,YAASA,CAAI,GAAKJ,EAAa,SAASI,CAAI,CAC5D,EACA,OACE,cAAWD,EAAYtB,CAAK,EAC5B,6DACF,CACF,EAEO,SAASwB,EAAkBzB,EAAOU,EAAS,CAChD,OAAO,SAAoBJ,EAAKiB,EAAa,CAAC,EAAGG,EAAM,CAChDhB,MAASX,EAAA,GAAWC,CAAK,EAE9B,MAAM2B,EAAgB,OACjBJ,CAAU,EADO,CAEpB,KAAMA,EAAW,MAAQ,IAC3B,CAAC,EACK,CAAE,KAAAK,EAAM,KAAAJ,CAAK,EAAIG,EAEvBN,EAASf,CAAG,EACZgB,EAAgBK,CAAa,EAE7B,IAAIE,EAAU,QAAQ,IAAI7B,EAAM,cAAeM,CAAG,GAYhD,CAACuB,GACAA,GAAWL,IAAS,MAAUA,IAAS,QAGxCxB,EAAM,cAAcM,CAAG,EAAI,OACtBqB,CAAa,EADS,CAEzB,KAAM3B,EAAM,QAAQ4B,EAAMF,CAAI,CAChC,CAAC,EAGL,CACF,CAEO,SAASI,EAAiB9B,EAAOU,EAAS,CAC/C,OAAO,SAAmBJ,EAAK,CAK7B,GAJKI,MAASX,EAAA,GAAWC,CAAK,EAE9BqB,EAASf,CAAG,EAER,QAAQ,IAAIN,EAAM,cAAeM,CAAG,EAAG,CACzC,MAAMiB,EAAavB,EAAM,cAAcM,CAAG,EACpC,CAAE,KAAAkB,EAAM,KAAAO,CAAK,EAAIR,EACnBC,GAAQA,IAAS,MAAUO,IAC7BA,EAAK,OAAO,EAIV/B,EAAM,cAAcM,CAAG,EAAI,OAGjC,CACF,CACF,CAEe,SAASM,EAAaZ,EAAO,CAC1C,SAAAD,EAAA,GAAWC,CAAK,EAET,CACL,WAAYyB,EAAkBzB,EAAO,EAAI,EACzC,UAAW8B,EAAiB9B,EAAO,EAAI,CACzC,CACF,C,2mBCzEA,QAAe,CAAC,CACd,IAAAM,EACA,KAAAsB,EACA,KAAAJ,EAAO,IACT,IAAMX,GAAoB,CACxB,MAAM,EAAN,cAAyB,aAAgB,CAWvC,YAAYvD,EAAO0E,EAAS,CAC1B,MAAM1E,EAAO0E,CAAO,EAEpB,KAAK,UAAYpB,EAAaoB,EAAQ,KAAK,EAC3C,KAAK,UAAU,WACb,GAAG,EAAW,eAAe1B,IAC7B,CAAE,KAAAsB,EAAM,KAAAJ,CAAK,EACblE,CACF,CACF,CAEA,sBAAuB,CACrB,KAAM,CAAE,UAAA2E,CAAU,EAAI,KAAK,UAE3BA,EAAU,GAAG,EAAW,eAAe3B,GAAK,CAC9C,CAEA,QAAS,CACP,MAAwC,OAAK,MAArC,cAAAU,CApDd,EAoD8C,EAAfC,EAAA,EAAe,EAAf,CAAjB,iBACR,OAAO,kBAACJ,EAAA,OAAqBI,CAAU,EAA/B,CAAiC,IAAKD,CAAA,EAAc,CAC9D,CACF,EAhCA,IAAMkB,EAAN,EACE,EADIA,EACG,mBAAmBrB,CAAgB,EAE1C,EAHIqB,EAGG,eAAe,CACpB,MAAO,WAAiB,UAC1B,CAAC,EAED,EAPIA,EAOG,cAAc,YAAYrB,EAAiB,aAChDA,EAAiB,MACjB,gBAyBJ,MAAMsB,EAA2B,eAAiB,CAAC7E,EAAO6D,IACxD,kBAACe,EAAA,OAAe5E,CAAK,EAApB,CAAsB,aAAc6D,CAAA,EAAK,CAC3C,EAED,OAAO,IAAqBgB,EAA0BtB,CAAgB,CACxE,C,2hBCpDe,SAASuB,EAAcC,EAAmB,CAAC,EAAGC,EAAkB,CAAC,EAAGxF,EAAS,CAC1F,MAAMyF,KAAc,KAAgB,OAC/BD,CAAe,EACfD,CAAgB,CACpB,EAGD,SAD6B,iBAAcvF,CAAO,EACtByF,CAAW,CACzC,C,qIClBO,MAAMC,EAAqB,qCACrBC,EAAS,yBACTC,EAAoB,oCAEjC,EAAe,CACX,mBAAAF,EACA,OAAAC,EACA,kBAAAC,CACJ,C,iUCAO,SAASC,GAAgB,CAC9B,MAAO,CACL,KAAM,KAAY,cACpB,CACF,CAEO,SAASC,GAAW,CACzB,MAAO,CACL,KAAM,KAAY,UACpB,CACF,CAEO,SAASC,EAAaC,EAAQ,CACnC,MAAO,CACL,KAAM,KAAY,aAClB,QAAAA,CACF,CACF,CAEO,SAASC,EAAgBC,EAAQC,EAAK,CAC3C,MAAO,CACL,KAAM,KAAY,qBAClB,OAAAD,EACA,IAAAC,CACF,CACF,C,2QCxBA,MAAM7D,EAAQ,wCAED8D,KAAc,KACzB,CACE,eAAgB,iBAChB,WAAY,aACZ,aAAc,eACd,aAAc,eACd,aAAc,eACd,qBAAsB,uBACtB,qBAAsB,uBACtB,qBAAsB,sBACxB,EACA,CAAE,OAAQ,kBAAkB,MAAA9D,CAAa,CAC3C,EAKa+D,EAAU,UACVC,EAAW,WACXC,EAAU,UACVC,EAAU,UACVC,EAAiB,QACjBC,EAAwB,O,4TClB9B,MAAMC,EAAe,CAC1B,WAAY,KACZ,mBAAoB,KACpB,SAAU,CAAC,EACX,iBAAkB,CAAC,CACrB,EAEMC,EAAuC,CAC3CnF,KAAQ,UAAOkF,CAAY,EAC3BE,IACG,CACH,OAAQA,EAAO,KAAM,CACnB,KAAK,KAAY,eACf,OAAOpF,EACT,KAAK,KAAY,WACf,OAAOkF,EACT,KAAK,KAAY,aACf,OAAOlF,EAAM,IAAI,aAAc,IAAQ,EACzC,KAAK,KAAY,aACf,OAAOA,EAAM,IAAI,aAAc,IAAO,EAAE,IAAI,WAAYoF,EAAO,IAAI,EACrE,KAAK,KAAY,aACf,OAAOpF,EAAM,IAAI,aAAc,IAAO,EACxC,KAAK,KAAY,qBACf,OAAOA,EAAM,IAAI,qBAAsB,IAAQ,EACjD,KAAK,KAAY,qBACf,OAAOA,EAAM,IAAI,qBAAsB,IAAO,EAAE,IAAI,mBAAoBoF,EAAO,IAAI,EACrF,KAAK,KAAY,qBACf,OAAOpF,EAAM,IAAI,qBAAsB,IAAO,EAChD,QACE,OAAOA,CACX,CACF,EAEA,EAAe,UAAAmF,EAAoC,I,sSC5C5C,SAAUE,GAAc,CAC7B,QAAQ,IAAI,8FAA8F,CAC5G,CAEO,SAAUC,EAAS,CAAC,QAAAf,CAAO,EAAG,CACnC,GAAI,CACF,MAAMjE,EAAM,QAAM,MAAKiE,CAAO,EAC1BjE,GAAA,MAAAA,EAAK,QACP,QAAM,MAAI,CAAE,KAAM,KAAY,aAAc,KAAMA,GAAA,YAAAA,EAAK,MAAO,CAAC,EAE/D,QAAM,MAAI,CAAE,KAAM,KAAY,aAAc,MAAOA,GAAA,YAAAA,EAAK,OAAQ,CAAC,CAErE,OAASiF,EAAP,CACA,QAAM,MAAI,CAAE,KAAM,KAAY,aAAc,MAAAA,CAAM,CAAC,CACrD,CACF,CAEO,SAAUC,EAAiB,CAAE,OAAAf,EAAQ,IAAAC,CAAI,EAAI,CAAC,EAAG,CACtD,GAAI,CACF,MAAMpE,EAAM,QAAM,MAAKoE,EAAID,CAAM,EAC7BnE,GAAA,MAAAA,EAAK,QACP,QAAM,MAAI,CAAE,KAAM,KAAY,qBAAsB,KAAMA,GAAA,YAAAA,EAAK,MAAO,CAAC,EAEvE,QAAM,MAAI,CAAE,KAAM,KAAY,qBAAsB,MAAOA,GAAA,YAAAA,EAAK,OAAQ,CAAC,CAE7E,OAASiF,EAAP,CACA,QAAM,MAAI,CAAE,KAAM,KAAY,qBAAsB,MAAAA,CAAM,CAAC,CAC7D,CACF,CAGO,SAAUE,GAAsB,CACrC,QAAM,MAAW,KAAY,eAAgBJ,CAAW,CAC1D,CAEO,SAAUK,GAAmB,CAClC,QAAM,MAAW,KAAY,aAAcJ,CAAQ,CACrD,CAEO,SAAUK,GAA2B,CAC1C,QAAM,MAAW,KAAY,qBAAsBH,CAAgB,CACrE,CAEe,YAAY,CACzB,QAAM,MAAI,CAACC,EAAoB,EAAGC,EAAiB,EAAGC,EAAyB,CAAC,CAAC,CACnF,C,oSC1CA,MAAMC,EAA4C5F,GAChDA,EAAM,IAAI,gDAAqD,GAAY,EAUvE6F,EAA0C,OAC9C,MAAeD,EAA2CE,GACxDA,EAAS,KAAK,CAChB,EAEF,EAAe,UAAAD,EAAuC,I,yjECUtD,MAAME,EAAiCC,GAAc,CAjCrD,MAkCE,KAAM,CAAE,QAAAC,EAAS,mBAAAC,EAAoB,IAAAxB,CAAI,KAAI,KAAiB,GAAK,CAAC,EAEpE,GAAIuB,IAAY,YAAc,CAACC,EAE7B,OAAOF,EAIT,MAAMG,EAAkBzB,GAAA,YAAAA,EAAK,aACvBH,EAAUG,GAAA,YAAAA,EAAK,KAEfD,IACJ,MAAgB,SAAS,QAAQ,IAAjC,cAAoC,QAAQ,IAAK,GAAG,IAAK,KAE3D,GAAI,CAAC0B,GAAmB,CAAC5B,EACvB,MAAM,IAAI,MACR,yGACF,EAGF,SAAS6B,EAAwBrH,EAAO,CACtC,MASIsH,EAAAtH,EARF,SAAAuH,EACA,wBAAyB,CACvB,WAAAC,EACA,SAAAC,EACA,mBAAAC,EACA,iBAAAC,EA7DR,GAgEQL,EADCM,GAAA,EACDN,EADC,CAPH,UACA,4BASF,cAAgB,IAAM,CAlE1B,IAAAA,EAAA,GA2EM,GARIE,IAAe,MACjBD,EAAQ,aAAa/B,CAAO,EAG1BkC,IAAuB,MACzBH,EAAQ,gBAAgB7B,EAAQ0B,CAAe,EAG7CM,IAAuB,KAAS,CAClC,MAAMG,GAAkBP,EAAA5B,EAAO,MAAM,GAAG,IAAhB,YAAA4B,EAAoB,CAAC,EACvCQ,IAAyB,QAAe,MAAM,GAAG,IAAxB,eAA4B,CAAC,EAE5D,0EAAO,KAA0BD,MAAoB,EAClD,KAAME,GAAW,IAChB,MAAcA,EAAO,OAAO,CAC9B,CAAC,EACA,MAAM,IAAM,CACX,QAAQ,KACN,6CAA6CF,YAA0BC,aACzE,EACA,0EAAO,KAA0BA,OAA2B,EAAE,KAAMC,GAAW,IAC7E,MAAcA,EAAO,OAAO,CAC9B,CAAC,CACH,CAAC,EAEH,iEAAO,KAAiBF,MAAoB,EACzC,KAAME,GAAW,CAChB,WAAcF,CAAe,CAC/B,CAAC,EACA,MAAM,IAAM,CACX,QAAQ,KACN,yCAAyCA,YAA0B,eACrE,EACA,iEAAO,KAAiB,SAA0B,EAAE,KAAME,GAAW,CACnE,WAAc,IAAqB,CACrC,CAAC,CACH,CAAC,CACL,CACF,EAAG,CAAC,CAAC,EAEL,MAAMC,GAAqBN,IAAuB,KAElD,OAAIF,IAAe,MAAYA,IAAe,KACrC,kBAAC,IAAO,IAAC,EAGdA,IAAe,KACV,kBAAC,IAAwB,IAAC,EAG/BA,IAAe,KAEf,kBAAC,OAAI,UAAW,iBAAgB,EAC9B,kBAAC,MACC,OAAA9B,EACA,SAAUsC,GAAqBL,GAAmB,CAAC,GAEnD,kBAACV,EAAA,KAAcW,EAAI,CAAE,CACvB,CACF,EAIG,kBAAC,WAAI,iCAA+B,CAC7C,CAEA,MAAMK,KAAkB,MAAyB,CAC/C,2BAAyB,KAAwC,CACnE,CAAC,EAED,SAASC,EAAmBC,EAAU,CACpC,MAAO,CACL,WAAS,sBAAmB,EAASA,CAAQ,CAC/C,CACF,CAEA,MAAMC,KAAc,KAAc,CAChC,IAAK,gDACL,QAAO,GACT,CAAC,EAEKC,KAAW,KAAW,CAC1B,IAAK,gDACL,KAAI,IACN,CAAC,EAEKC,KAAc,WAAQL,EAAiBC,CAAkB,EAE/D,SAAO,WAAQE,EAAaC,EAAUC,CAAW,EAAEjB,CAAuB,CAC5E,EAEA,EAAe,UAAAL,EAA6B,I,oLCvI5C,QAf4B,CAACzD,EAAkB1B,IAAW,CAKxD,MAAM0G,KAAkB,MAAOhF,CAAgB;AAAA,MAC3C1B;AAAA,IAIJ,OAAA0G,EAAgB,aAAehF,EAAiB,aAEzCgF,CACT,C","sources":["webpack://rewards-catalog/./node_modules/@capillarytech/vulcan-react-sdk/components/AccessForbidden/messages.js","webpack://rewards-catalog/./node_modules/@capillarytech/vulcan-react-sdk/components/AccessForbidden/style.js","webpack://rewards-catalog/./node_modules/@capillarytech/vulcan-react-sdk/components/AccessForbidden/AccessForbidden.js","webpack://rewards-catalog/./node_modules/@capillarytech/vulcan-react-sdk/components/InternalIntouchLogin/styles.js","webpack://rewards-catalog/./node_modules/@capillarytech/vulcan-react-sdk/components/InternalIntouchLogin/index.js","webpack://rewards-catalog/./node_modules/@capillarytech/vulcan-react-sdk/components/NotFoundPage/style.js","webpack://rewards-catalog/./node_modules/@capillarytech/vulcan-react-sdk/components/NotFoundPage/messages.js","webpack://rewards-catalog/./node_modules/@capillarytech/vulcan-react-sdk/components/NotFoundPage/NotFoundPage.js","webpack://rewards-catalog/./node_modules/@capillarytech/vulcan-react-sdk/components/UnauthorizedIllustration/index.js","webpack://rewards-catalog/./node_modules/@capillarytech/vulcan-react-sdk/components/UnauthorizedIllustration/messages.js","webpack://rewards-catalog/./node_modules/@capillarytech/vulcan-react-sdk/components/UnauthorizedIllustration/styles.js","webpack://rewards-catalog/./node_modules/@capillarytech/vulcan-react-sdk/utils/checkStore.js","webpack://rewards-catalog/./node_modules/@capillarytech/vulcan-react-sdk/utils/defineActionTypes.js","webpack://rewards-catalog/./node_modules/@capillarytech/vulcan-react-sdk/utils/reducerInjectors.js","webpack://rewards-catalog/./node_modules/@capillarytech/vulcan-react-sdk/utils/injectReducer.js","webpack://rewards-catalog/./node_modules/@capillarytech/vulcan-react-sdk/utils/sagaInjectors.js","webpack://rewards-catalog/./node_modules/@capillarytech/vulcan-react-sdk/utils/injectSaga.js","webpack://rewards-catalog/./node_modules/@capillarytech/vulcan-react-sdk/utils/reducers.js","webpack://rewards-catalog/./node_modules/@capillarytech/vulcan-react-sdk/utils/sagaInjectorTypes.js","webpack://rewards-catalog/./node_modules/@capillarytech/vulcan-react-sdk/utils/withCustomAuthAndTranslations/actions.js","webpack://rewards-catalog/./node_modules/@capillarytech/vulcan-react-sdk/utils/withCustomAuthAndTranslations/constants.js","webpack://rewards-catalog/./node_modules/@capillarytech/vulcan-react-sdk/utils/withCustomAuthAndTranslations/reducer.js","webpack://rewards-catalog/./node_modules/@capillarytech/vulcan-react-sdk/utils/withCustomAuthAndTranslations/saga.js","webpack://rewards-catalog/./node_modules/@capillarytech/vulcan-react-sdk/utils/withCustomAuthAndTranslations/selectors.js","webpack://rewards-catalog/./node_modules/@capillarytech/vulcan-react-sdk/utils/withCustomAuthAndTranslations/wrapper.js","webpack://rewards-catalog/./node_modules/@capillarytech/vulcan-react-sdk/utils/withStyles.js"],"sourcesContent":["import { defineMessages } from 'react-intl';\n\nconst prefix = 'loyalty.app.components.pages.AccessForbidden';\n\nexport default defineMessages({\n  forbiddenHeader: {\n    id: `${prefix}.forbiddenHeader`,\n    defaultMessage: 'Access Forbidden',\n  },\n  forbiddenDesc: {\n    id: `${prefix}.forbiddenDesc`,\n    defaultMessage: 'This page access has not been provided to you.',\n  },\n});\n","import { css } from 'styled-components';\n\nexport default css`\n  margin-top: 3.2em;\n  text-align: center;\n`;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport CapRow from '@capillarytech/cap-ui-library/CapRow';\nimport CapButton from '@capillarytech/cap-ui-library/CapButton';\nimport CapHeading from '@capillarytech/cap-ui-library/CapHeading';\nimport { withStyles } from '../../utils';\nimport messages from './messages';\nimport styles from './style';\n\nconst AccessForbidden = ({ className, history }) => {\n  return (\n    <CapRow className={className}>\n      <CapHeading type=\"h2\">\n        <FormattedMessage {...messages.forbiddenHeader} />\n      </CapHeading>\n      <CapHeading type=\"h3\">\n        <FormattedMessage {...messages.forbiddenDesc} />\n      </CapHeading>\n      <CapButton onClick={() => history.push('/')}>Click here to go back to home.</CapButton>\n    </CapRow>\n  );\n};\n\nexport default withStyles(AccessForbidden, styles);\n","import { css } from 'styled-components';\nimport loginPageImage from '../../_assets/login_page.jpg';\n\nexport default css`\n  .cap-login-container {\n    display: flex;\n    width: 100%;\n    height: 100vh;\n    justify-content: flex-end;\n    align-items: center;\n    background-image: linear-gradient(to bottom, rgba(35, 35, 35, 0.4), rgba(18, 18, 18, 0.2)),\n    url(${loginPageImage});\n    background-repeat: no-repeat;\n    background-attachment: fixed;\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-size: cover;\n    background-attachment: fixed; /* Optional: Fixed background */\n  }\n\n  .cap-login-card {\n    width: 25rem;\n    padding: 4rem 2rem;\n    border-radius: .5rem;\n    margin-right: 4rem;\n  }\n\n  .cap-login-logo {\n    width: 3rem;\n    height: auto;\n  }\n\n  .cap-login-heading {\n    padding: 1.25rem 0;\n    letter-spacing: 1px;\n    word-spacing: 2px;\n  }\n\n  .cap-login-input {\n    margin-bottom: 1rem;\n  }\n\n  .cap-login-centeringDiv {\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n  }\n\n  .cap-login-button {\n    width: 50%;\n    margin-top: 1.25rem;\n  }\n`;\n","import React, { useCallback, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport isEmpty from 'lodash/isEmpty';\nimport {\n  CapCard,\n  CapImage,\n  CapHeading,\n  CapInput,\n  CapButton,\n  CapSpin,\n} from \"@capillarytech/cap-ui-library\";\nimport CapillaryLogo from \"@capillarytech/cap-ui-library/assets/icons/capillary_logo_v2.png\";\nimport { request } from \"@capillarytech/cap-ui-library/service/api\";\nimport styles from './styles';\nimport { withStyles } from \"../../utils\";\nfunction InternalIntouchLogin(props) {\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginProgess, updateLoginProgress] = useState(false);\n\n  const {\n    signInLabel,\n    userNameLabel,\n    passwordLabel,\n    apiEndPoint = \"\",\n    onSuccess,\n    onFailure,\n  } = props;\n\n  const handleNameChange = useCallback((event) => {\n    setUserName(event.target.value);\n  }, []);\n\n  const handlePasswordChange = useCallback((event) => {\n    setPassword(event.target.value);\n  }, []);\n\n  const handleLoginProgess = useCallback(() => {\n    updateLoginProgress((state) => !state);\n  }, []);\n\n  const authorize = useCallback(() => {\n    const body = {\n      username: userName,\n      password,\n    };\n    const headers = {\n      \"Content-Type\": \"application/json\",\n    };\n\n    const requestObj = {\n      method: \"POST\",\n      headers: new Headers(headers),\n    };\n    requestObj.body = JSON.stringify(body);\n    \n    if (process.env.NODE_ENV === \"production\") {\n      requestObj.credentials = 'include';\n    }\n\n    return request(`${apiEndPoint}`, requestObj);\n  }, [apiEndPoint, password, userName]);\n\n  const handleLogin = useCallback(() => {\n    if (apiEndPoint) {\n      handleLoginProgess();\n      authorize()\n        .then((res) => {\n          handleLoginProgess();\n          if (!res.success) {\n            onFailure(res);\n            return;\n          }\n          if (onSuccess) onSuccess(res);\n        })\n        .catch((err) => {\n          handleLoginProgess();\n          if (onFailure) onFailure(err);\n        });\n    }\n  }, [apiEndPoint, onFailure, onSuccess, authorize, handleLoginProgess]);\n\n  return (\n    <div className={`${props.className} cap-login`}>\n      <CapSpin spinning={loginProgess}>\n        <section className=\"cap-login-container\">\n          <CapCard className=\"cap-login-card\">\n            <CapImage className=\"cap-login-logo\" src={CapillaryLogo} />\n            <CapHeading className=\"cap-login-heading\" type=\"h2\">\n              {signInLabel}\n            </CapHeading>\n            <CapInput\n              className=\"cap-login-input\"\n              labelPosition=\"top\"\n              label={userNameLabel}\n              value={userName}\n              onChange={handleNameChange}\n              isRequired\n            />\n            <CapInput\n              type=\"password\"\n              className=\"cap-login-input\"\n              labelPosition=\"top\"\n              label={passwordLabel}\n              value={password}\n              onChange={handlePasswordChange}\n              isRequired\n            />\n            <div className=\"cap-login-centeringDiv\">\n              <CapButton className=\"cap-login-button\" onClick={handleLogin} disabled={ isEmpty(userName?.trim()) || isEmpty(password?.trim())}>\n                {signInLabel}\n              </CapButton>\n            </div>\n          </CapCard>\n        </section>\n      </CapSpin>\n    </div>\n  );\n} \n\nInternalIntouchLogin.propTypes = {\n  onSuccess: PropTypes.func,\n  onFailure: PropTypes.func,\n  signInLabel: PropTypes.string,\n  userNameLabel: PropTypes.string,\n  passwordLabel: PropTypes.string,\n  apiEndPoint: PropTypes.string.isRequired,\n};\n\nexport default withStyles(InternalIntouchLogin, styles);\n","import { css } from 'styled-components';\n\nexport default css`\n  .big-owl {\n    background-color: red;\n    height: 600px;\n    width: 600px;\n  }\n\n  .red-bg {\n    background-color: red;\n  }\n`;\n","/*\n * NotFoundPage Messages\n *\n * This contains all the text for the NotFoundPage container.\n */\nimport { defineMessages } from 'react-intl';\n\nexport const scope = 'yourApp.components.containers.NotFoundPage';\n\nexport default defineMessages({\n  header: {\n    id: `${scope}.header`,\n    defaultMessage: 'Looks like you are lost!',\n  },\n});\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport styled from 'styled-components';\nimport CapImage from '@capillarytech/cap-ui-library/CapImage';\nimport { withStyles } from '../../utils';\nimport styles from './style';\nimport messages from './messages';\nimport NotFoundImage from '../../_assets/empty.svg';\n// import Heading from '../../atoms/Heading';\nimport { CapHeading } from '@capillarytech/cap-ui-library';\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  // min-height: 100vh;\n  box-sizing: border-box;\n  text-align: center;\n`;\n\nconst Content = styled.section`\n  width: 100%;\n  box-sizing: border-box;\n`;\n\nconst PageTemplate = ({ children, ...props }) => (\n  <Wrapper {...props}>\n    <Content>{children}</Content>\n  </Wrapper>\n);\n\nexport const NotFoundPage = () => (\n  <PageTemplate>\n    <CapImage src={NotFoundImage} />\n    <CapHeading type=\"h1\">\n      <FormattedMessage {...messages.header} />\n    </CapHeading>\n  </PageTemplate>\n);\n\nexport default withStyles(NotFoundPage, styles);\n","import React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { CapImage, CapHeading } from \"@capillarytech/cap-ui-library\";\nimport unauthorizedImg from \"../../_assets/unauthorized.png\";\nimport { StyledCenteredDivEmbedded, StyledCenteredDivStandalone } from \"./styles\";\nimport messages from \"./messages\";\nimport getVulcanSDKData from \"../../utils/getVulcanSDKData\";\n\nexport default function index(props) {\n  const { appName } = getVulcanSDKData() || {};\n  const isStandaloneMode = localStorage.getItem(`${appName}__isStandalone`) === 'true';\n  return (\n    <div className=\"unauthorized-illustration\">\n      {\n        isStandaloneMode ? (\n          <StyledCenteredDivStandalone width={props.width}>\n            <CapImage src={unauthorizedImg} {...props} />\n            <CapHeading type=\"h3\">\n              <FormattedMessage {...messages.unauthorized} />\n            </CapHeading>\n          </StyledCenteredDivStandalone>\n        ) : (\n          <StyledCenteredDivEmbedded width={props.width}>\n            <CapImage src={unauthorizedImg} {...props} />\n            <CapHeading type=\"h3\">\n              <FormattedMessage {...messages.unauthorized} />\n            </CapHeading>\n          </StyledCenteredDivEmbedded>\n        )\n      }\n    </div>\n  );\n}\n","/*\n * WithCustomAuthAndTranslations Messages\n *\n * This contains all the text for the WithCustomAuthAndTranslations component.\n */\n\nimport { defineMessages } from 'react-intl';\n\nexport const scope = 'vulcanReactSDK.components.Unauthorized';\n\nexport default defineMessages({\n  unauthorized: {\n    id: `${scope}.unauthorized`,\n    defaultMessage: 'You are not authorized to access this.',\n  },\n});\n","import styled from 'styled-components';\n\nexport const StyledCenteredDivEmbedded = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, 50%);\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  img{\n    width: ${(props) => props.width || '70%'};\n  }\n`;\n\nexport const StyledCenteredDivStandalone = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  img{\n    width: ${(props) => props.width || '70%'};\n  }\n`;\n","import { conformsTo, isFunction, isObject } from 'lodash';\nimport invariant from 'invariant';\n\n/**\n * Validate the shape of redux store\n */\nexport default function checkStore(store) {\n  const shape = {\n    dispatch: isFunction,\n    subscribe: isFunction,\n    getState: isFunction,\n    replaceReducer: isFunction,\n    runSaga: isFunction,\n    injectedReducers: isObject,\n    injectedSagas: isObject,\n  };\n  invariant(\n    conformsTo(store, shape),\n    '(app/utils...) injectors: Expected a valid redux store',\n  );\n}\n","/**\n * Defines actions by prefixing the keys of the actionDescriptors object with a given prefix and scope.\n * @param {Object} actionDescriptors - The object containing the action descriptors.\n * @param {Object} options - The options object with 'scope' (mandatory) and 'prefix' (optional) properties.\n * @param {string} options.scope - The scope to be added to the keys.\n * @param {string} [options.prefix=\"\"] - The prefix to be added to the keys.\n * @returns {Object} - The object with prefixed keys, with property access throwing an error for non-existent properties.\n * @throws {Error} - Throws an error if 'scope' is not defined.\n */\nfunction defineActionTypes(actionDescriptors, options={}) {\n    const { scope, prefix = \"\" } = options;\n\n    if (typeof scope !== \"string\" || scope.trim() === \"\") {\n        throw new Error(\"Scope must be defined and be a non-empty string.\");\n    }\n\n    const prefixedActions = {};\n    for (const key in actionDescriptors) {\n        if (actionDescriptors.hasOwnProperty(key)) {\n            prefixedActions[key] = `${prefix}${scope}${actionDescriptors[key]}`;\n        }\n    }\n\n    return new Proxy(prefixedActions, {\n        get: function(target, prop) {\n            if (!(prop in target)) {\n                throw new Error(`Property '${prop}' does not exist on action. Check for any typos.`);\n            }\n            return target[prop];\n        }\n    });\n}\n\nexport default defineActionTypes;\n","import invariant from 'invariant';\nimport { isEmpty, isFunction, isString } from 'lodash';\n\nimport checkStore from './checkStore';\nimport createReducer from './reducers';\n\nexport function injectReducerFactory(store, isValid) {\n  return function injectReducer(key, reducer) {\n    if (!isValid) checkStore(store);\n\n    invariant(\n      isString(key) && !isEmpty(key) && isFunction(reducer),\n      '(app/utils...) injectReducer: Expected `reducer` to be a reducer function',\n    );\n\n    // Check `store.injectedReducers[key] === reducer` for hot reloading when a key is the same but a reducer is different\n    if (\n      Reflect.has(store.injectedReducers, key) &&\n      store.injectedReducers[key] === reducer\n    )\n      return;\n\n    store.injectedReducers[key] = reducer; // eslint-disable-line no-param-reassign\n    store.replaceReducer(createReducer(store.injectedReducers, store.initialReducer, store.initialHistory));\n  };\n}\n\nexport default function getInjectors(store) {\n  checkStore(store);\n\n  return {\n    injectReducer: injectReducerFactory(store, true),\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n\nimport getInjectors from './reducerInjectors';\n\n/**\n * Dynamically injects a reducer\n *\n * @param {string} key A key of the reducer\n * @param {function} reducer A reducer that will be injected\n *\n */\nexport default ({ key, reducer }) => WrappedComponent => {\n  class ReducerInjector extends React.Component {\n    static WrappedComponent = WrappedComponent;\n\n    static contextTypes = {\n      store: PropTypes.object.isRequired,\n    };\n\n    static displayName = `withReducer(${WrappedComponent.displayName ||\n      WrappedComponent.name ||\n      'Component'})`;\n\n    componentWillMount() {\n      const { injectReducer } = this.injectors;\n\n      injectReducer(key, reducer);\n    }\n\n    injectors = getInjectors(this.context.store);\n\n    render() {\n      const { forwardedRef, ...otherProps } = this.props;\n      return <WrappedComponent {...otherProps} ref={forwardedRef} />;\n    }\n  }\n  /** forwardRef from HOC to the Wrapped Component */\n  const ReducerInjectorWithForwardRef = React.forwardRef((props, ref) => (\n    <ReducerInjector {...props} forwardedRef={ref} />\n  ));\n\n  return hoistNonReactStatics(ReducerInjectorWithForwardRef, WrappedComponent);\n};\n","import invariant from 'invariant';\nimport { isEmpty, isFunction, isString, conformsTo } from 'lodash';\n\nimport checkStore from './checkStore';\nimport { DAEMON, ONCE_TILL_UNMOUNT, RESTART_ON_REMOUNT } from './sagaInjectorTypes';\n\nconst allowedModes = [RESTART_ON_REMOUNT, DAEMON, ONCE_TILL_UNMOUNT];\n\nconst checkKey = key =>\n  invariant(\n    isString(key) && !isEmpty(key),\n    '(app/utils...) injectSaga: Expected `key` to be a non empty string',\n  );\n\nconst checkDescriptor = descriptor => {\n  const shape = {\n    saga: isFunction,\n    mode: mode => isString(mode) && allowedModes.includes(mode),\n  };\n  invariant(\n    conformsTo(descriptor, shape),\n    '(app/utils...) injectSaga: Expected a valid saga descriptor',\n  );\n};\n\nexport function injectSagaFactory(store, isValid) {\n  return function injectSaga(key, descriptor = {}, args) {\n    if (!isValid) checkStore(store);\n\n    const newDescriptor = {\n      ...descriptor,\n      mode: descriptor.mode || DAEMON,\n    };\n    const { saga, mode } = newDescriptor;\n\n    checkKey(key);\n    checkDescriptor(newDescriptor);\n\n    let hasSaga = Reflect.has(store.injectedSagas, key);\n\n    if (process.env.NODE_ENV !== 'production') {\n      const oldDescriptor = store.injectedSagas[key];\n      // enable hot reloading of daemon and once-till-unmount sagas\n      if (hasSaga && oldDescriptor.saga !== saga) {\n        oldDescriptor.task.cancel();\n        hasSaga = false;\n      }\n    }\n\n    if (\n      !hasSaga ||\n      (hasSaga && mode !== DAEMON && mode !== ONCE_TILL_UNMOUNT)\n    ) {\n      /* eslint-disable no-param-reassign */\n      store.injectedSagas[key] = {\n        ...newDescriptor,\n        task: store.runSaga(saga, args),\n      };\n      /* eslint-enable no-param-reassign */\n    }\n  };\n}\n\nexport function ejectSagaFactory(store, isValid) {\n  return function ejectSaga(key) {\n    if (!isValid) checkStore(store);\n\n    checkKey(key);\n\n    if (Reflect.has(store.injectedSagas, key)) {\n      const descriptor = store.injectedSagas[key];\n      const { mode, task } = descriptor;\n      if (mode && mode !== DAEMON && task) {\n        task.cancel();\n        // Clean up in production; in development we need `descriptor.saga` for hot reloading\n        if (process.env.NODE_ENV === 'production') {\n          // Need some value to be able to detect `ONCE_TILL_UNMOUNT` sagas in `injectSaga`\n          store.injectedSagas[key] = 'done'; // eslint-disable-line no-param-reassign\n        }\n      }\n    }\n  };\n}\n\nexport default function getInjectors(store) {\n  checkStore(store);\n\n  return {\n    injectSaga: injectSagaFactory(store, true),\n    ejectSaga: ejectSagaFactory(store, true),\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n\nimport getInjectors from './sagaInjectors';\nimport { RESTART_ON_REMOUNT } from './sagaInjectorTypes';\n\n/**\n * Dynamically injects a saga, passes component's props as saga arguments\n *\n * @param {string} key A key of the saga\n * @param {function} saga A root saga that will be injected\n * @param {string} [mode] By default (sagaInjectorTypes.RESTART_ON_REMOUNT) the saga will be started on component mount and\n * cancelled with `task.cancel()` on component un-mount for improved performance. Another two options:\n *   - sagaInjectorTypes.DAEMON—starts the saga on component mount and never cancels it or starts again,\n *   - sagaInjectorTypes.ONCE_TILL_UNMOUNT—behaves like 'RESTART_ON_REMOUNT' but never runs it again.\n *\n */\nexport default ({\n  key,\n  saga,\n  mode = RESTART_ON_REMOUNT,\n}) => WrappedComponent => {\n  class InjectSaga extends React.Component {\n    static WrappedComponent = WrappedComponent;\n\n    static contextTypes = {\n      store: PropTypes.object.isRequired,\n    };\n\n    static displayName = `withSaga(${WrappedComponent.displayName ||\n      WrappedComponent.name ||\n      'Component'})`;\n\n    constructor(props, context) {\n      super(props, context);\n\n      this.injectors = getInjectors(context.store);\n      this.injectors.injectSaga(\n        `${InjectSaga.displayName}:${key}`,\n        { saga, mode },\n        props,\n      );\n    }\n\n    componentWillUnmount() {\n      const { ejectSaga } = this.injectors;\n\n      ejectSaga(`${InjectSaga.displayName}:${key}`);\n    }\n\n    render() {\n      const { forwardedRef, ...otherProps } = this.props;\n      return <WrappedComponent {...otherProps} ref={forwardedRef} />;\n    }\n  }\n  /** forwardRef from HOC to the Wrapped Component */\n  const InjectSagaWithForwardRef = React.forwardRef((props, ref) => (\n    <InjectSaga {...props} forwardedRef={ref} />\n  ));\n\n  return hoistNonReactStatics(InjectSagaWithForwardRef, WrappedComponent);\n};\n","/**\n * Combine all reducers in this file and export the combined reducers.\n */\n\nimport { combineReducers } from 'redux-immutable';\nimport { connectRouter } from 'connected-react-router/immutable';\n\n/**\n * Merges the main reducer with the router state and dynamically injected reducers\n */\nexport default function createReducer(injectedReducers = {}, initialReducers = {}, history) {\n  const rootReducer = combineReducers({\n    ...initialReducers,\n    ...injectedReducers,\n  });\n  // Wrap the root reducer and return a new root reducer with router state\n  const mergeWithRouterState = connectRouter(history);\n  return mergeWithRouterState(rootReducer);\n}\n","export const RESTART_ON_REMOUNT = '@@saga-injector/restart-on-remount';\nexport const DAEMON = '@@saga-injector/daemon';\nexport const ONCE_TILL_UNMOUNT = '@@saga-injector/once-till-unmount';\n\nexport default {\n    RESTART_ON_REMOUNT,\n    DAEMON,\n    ONCE_TILL_UNMOUNT\n}","/*\n *\n * WithCustomAuthAndTranslations actions\n *\n */\n\nimport { actionTypes } from './constants';\n\nexport function defaultAction() {\n  return {\n    type: actionTypes.DEFAULT_ACTION,\n  };\n}\n\nexport function clearData(){\n  return {\n    type: actionTypes.CLEAR_DATA,\n  };\n}\n\nexport function authenticate(authApi){\n  return {\n    type: actionTypes.AUTH_REQUEST,\n    authApi\n  };\n}\n\nexport function getTranslations(locale, api) {\n  return {\n    type: actionTypes.TRANSLATIONS_REQUEST,\n    locale,\n    api,\n  };\n}","/*\n *\n * WithCustomAuthAndTranslations constants\n *\n */\n\n// Define actions constants here inside ACTION_TYPES...\nimport { defineActionTypes } from '../../utils'\n\nconst scope = \"/Utils/withCustomAuthAndTranslations/\"\n\nexport const actionTypes = defineActionTypes(\n  {\n    DEFAULT_ACTION: 'DEFAULT_ACTION',\n    CLEAR_DATA: 'CLEAR_DATA',\n    AUTH_REQUEST: 'AUTH_REQUEST',\n    AUTH_SUCCESS: 'AUTH_SUCCESS',\n    AUTH_FAILURE: 'AUTH_FAILURE',\n    TRANSLATIONS_REQUEST: 'TRANSLATIONS_REQUEST',\n    TRANSLATIONS_SUCCESS: 'TRANSLATIONS_SUCCESS',\n    TRANSLATIONS_FAILURE: 'TRANSLATIONS_FAILURE'\n  },\n  { prefix: CURRENT_APP_NAME, scope: scope },\n);\n\n\n// Define any other constants here like so...\n// export const DATE_DISPLAY_FORMAT = 'D MMM YYYY, h:mm:ss A';\nexport const INITIAL = \"INITIAL\";\nexport const PROGRESS = \"PROGRESS\";\nexport const SUCCESS = \"SUCCESS\";\nexport const FAILURE = \"FAILURE\";\nexport const DEFAULT_LOCALE = \"en-US\";\nexport const DEFAULT_MOMENT_LOCALE = \"en-gb\";","/*\n *\n * WithCustomAuthAndTranslations reducer\n *\n */\nimport { fromJS } from \"immutable\";\n\nimport {\n  actionTypes,\n  INITIAL,\n  PROGRESS,\n  SUCCESS,\n  FAILURE,\n} from \"./constants\";\n\nexport const initialState = {\n  authStatus: INITIAL,\n  translationsStatus: INITIAL,\n  authData: {},\n  translationsData: {},\n};\n\nconst withCustomAuthAndTranslationsReducer = (\n  state = fromJS(initialState),\n  action\n) => {\n  switch (action.type) {\n    case actionTypes.DEFAULT_ACTION:\n      return state;\n    case actionTypes.CLEAR_DATA:\n      return initialState;\n    case actionTypes.AUTH_REQUEST:\n      return state.set(\"authStatus\", PROGRESS);\n    case actionTypes.AUTH_SUCCESS:\n      return state.set(\"authStatus\", SUCCESS).set(\"authData\", action.data);\n    case actionTypes.AUTH_FAILURE:\n      return state.set(\"authStatus\", FAILURE);\n    case actionTypes.TRANSLATIONS_REQUEST:\n      return state.set(\"translationsStatus\", PROGRESS);\n    case actionTypes.TRANSLATIONS_SUCCESS:\n      return state.set(\"translationsStatus\", SUCCESS).set(\"translationsData\", action.data);\n    case actionTypes.TRANSLATIONS_FAILURE:\n      return state.set(\"translationsStatus\", FAILURE);\n    default:\n      return state;\n  }\n};\n\nexport default withCustomAuthAndTranslationsReducer;\n","import { take, call, put, select, all, takeLatest } from 'redux-saga/effects';\nimport { actionTypes } from './constants';\n\n// Individual exports for testing\nexport function* defaultSaga() {\n  console.log('this is default Saga. You can make api calls etc from here and dispatch a action using \"put\"')\n}\n\nexport function* authSaga({authApi}) {\n  try {\n    const res = yield call(authApi);\n    if (res?.success) {\n      yield put({ type: actionTypes.AUTH_SUCCESS, data: res?.result });\n    } else {\n      yield put({ type: actionTypes.AUTH_FAILURE, error: res?.message });\n    }\n  } catch (error) {\n    yield put({ type: actionTypes.AUTH_FAILURE, error });\n  }\n}\n\nexport function* translationsSaga({ locale, api } = {}) {\n  try {\n    const res = yield call(api,locale);\n    if (res?.success) {\n      yield put({ type: actionTypes.TRANSLATIONS_SUCCESS, data: res?.result });\n    } else {\n      yield put({ type: actionTypes.TRANSLATIONS_FAILURE, error: res?.message });\n    }\n  } catch (error) {\n    yield put({ type: actionTypes.TRANSLATIONS_FAILURE, error });\n  }\n}\n\n// Individual exports for testing\nexport function* watchForDefaultSaga() {\n  yield takeLatest(actionTypes.DEFAULT_ACTION, defaultSaga);\n}\n\nexport function* watchForAuthSaga() {\n  yield takeLatest(actionTypes.AUTH_REQUEST, authSaga);\n}\n\nexport function* watchForTranslationsSaga() {\n  yield takeLatest(actionTypes.TRANSLATIONS_REQUEST, translationsSaga);\n}\n\nexport default function*() {\n  yield all([watchForDefaultSaga(), watchForAuthSaga(), watchForTranslationsSaga()]);\n}","import { createSelector } from 'reselect';\nimport { initialState } from './reducer';\n\n/**\n * Direct selector to the withCustomAuthAndTranslations state domain\n */\n\nconst selectWithCustomAuthAndTranslationsDomain = state =>\n  state.get(`${CURRENT_APP_NAME}-withCustomAuthAndTranslations`, initialState);\n\n/**\n * Other specific selectors\n */\n\n/**\n * Default selector used by WithCustomAuthAndTranslations\n */\n\nconst makeSelectWithCustomAuthAndTranslations = () =>\n  createSelector(selectWithCustomAuthAndTranslationsDomain, substate =>\n    substate.toJS(),\n  );\n\nexport default makeSelectWithCustomAuthAndTranslations;\nexport { selectWithCustomAuthAndTranslationsDomain };\n","/**\n *\n * WithCustomAuthAndTranslations\n *\n */\n\nimport React from \"react\";\nimport { IntlProvider } from \"react-intl\";\nimport { addLocaleData } from \"react-intl\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { compose, bindActionCreators } from \"redux\";\n\nimport moment from \"moment\";\nimport injectSaga from \"../injectSaga\";\nimport injectReducer from \"../injectReducer\";\nimport makeSelectWithCustomAuthAndTranslations from \"./selectors\";\nimport * as actions from \"./actions\";\nimport reducer from \"./reducer\";\nimport saga from \"./saga\";\nimport {\n  PROGRESS,\n  INITIAL,\n  FAILURE,\n  SUCCESS,\n  DEFAULT_LOCALE,\n  DEFAULT_MOMENT_LOCALE,\n} from \"./constants\";\nimport getVulcanSDKData from \"../getVulcanSDKData\";\nimport localStorageApi from \"../localStorageApi\";\nimport { CapSpin } from \"@capillarytech/cap-ui-library\";\nimport { UnauthorizedIllustration } from \"../../components\";\n\nconst withCustomAuthAndTranslations = (Component) => {\n  const { appType, isHostedOnPlatform, api } = getVulcanSDKData() || {};\n  \n  if (appType === 'external' || !isHostedOnPlatform) {\n    // withCustomAuthAndTranslations HOC works only when you have native / global app type in your app config for i18n and it is hosted on the vulcan platform\n    return Component;\n  }\n\n  // for native apps hosted on platform attach auth and i18n api call wrapper\n  const translationsApi = api?.translations;\n  const authApi = api?.auth;\n  //TODO: localStorage key will change. We will introduce new key in core apps for locale.\n  const locale =\n    localStorageApi.loadItem(\"locale\")?.replace(\"_\", \"-\") || DEFAULT_LOCALE;\n\n  if (!translationsApi || !authApi) {\n    throw new Error(\n      \"Please specify translations and auth api in app config inorder to use withCustomAuthAndTranslations HOC\"\n    );\n  }\n\n  function WithAuthAndTranslations(props) {\n    const {\n      actions,\n      authAndTranslationsData: {\n        authStatus,\n        authData,\n        translationsStatus,\n        translationsData,\n      },\n      ...rest\n    } = props;\n\n    React.useEffect(() => {\n      if (authStatus !== SUCCESS) {\n        actions.authenticate(authApi);\n      }\n\n      if (translationsStatus !== SUCCESS) {\n        actions.getTranslations(locale, translationsApi);\n      }\n\n      if (translationsStatus === INITIAL) {\n        const reactIntlLocale = locale.split(\"-\")?.[0];\n        const defaultReactIntlLocale = DEFAULT_LOCALE.split(\"-\")?.[0];\n        // Dynamically import the react-intl locale data and handle fallback.\n        import(`react-intl/locale-data/${reactIntlLocale}.js`)\n          .then((module) => {\n            addLocaleData(module.default);\n          })\n          .catch(() => {\n            console.warn(\n              `React-Intl locale-data does not exist for ${reactIntlLocale}. Using ${defaultReactIntlLocale} instead.`\n            );\n            import(`react-intl/locale-data/${defaultReactIntlLocale}.js`).then((module) => {\n              addLocaleData(module.default);\n            });\n          });\n        // Dynamically import the moment locale data and handle fallback.\n        import(`moment/locale/${reactIntlLocale}.js`)\n          .then((module) => {\n            moment.locale(reactIntlLocale);\n          })\n          .catch(() => {\n            console.warn(\n              `Moment locale-data does not exist for ${reactIntlLocale}. Using ${DEFAULT_MOMENT_LOCALE} instead.`\n            );\n            import(`moment/locale/${DEFAULT_MOMENT_LOCALE}.js`).then((module) => {\n              moment.locale(DEFAULT_MOMENT_LOCALE);\n            });\n          });\n      }\n    }, []);\n\n    const translationsLoaded = translationsStatus === SUCCESS;\n\n    if (authStatus === PROGRESS || authStatus === INITIAL) {\n      return <CapSpin />;\n    }\n\n    if (authStatus === FAILURE) {\n      return <UnauthorizedIllustration />;\n    }\n\n    if (authStatus === SUCCESS) {\n      return (\n        <div className={CURRENT_APP_NAME}>\n          <IntlProvider\n            locale={locale}\n            messages={translationsLoaded ? translationsData : {}}\n          >\n            <Component {...rest} />\n          </IntlProvider>\n        </div>\n      );\n    }\n\n    return <div>This should not happen ideally.</div>;\n  }\n\n  const mapStateToProps = createStructuredSelector({\n    authAndTranslationsData: makeSelectWithCustomAuthAndTranslations(),\n  });\n\n  function mapDispatchToProps(dispatch) {\n    return {\n      actions: bindActionCreators(actions, dispatch),\n    };\n  }\n\n  const withReducer = injectReducer({\n    key: `${CURRENT_APP_NAME}-withCustomAuthAndTranslations`,\n    reducer,\n  });\n\n  const withSaga = injectSaga({\n    key: `${CURRENT_APP_NAME}-withCustomAuthAndTranslations`,\n    saga,\n  });\n\n  const withConnect = connect(mapStateToProps, mapDispatchToProps);\n\n  return compose(withReducer, withSaga, withConnect)(WithAuthAndTranslations);\n};\n\nexport default withCustomAuthAndTranslations;\n","import styled from 'styled-components';\n\n/**\n * Enhances a React component with additional styles using styled-components.\n * @param {React.ComponentType} WrappedComponent - The React component to enhance.\n * @param {TemplateStringsArray} styles - CSS styles as a TemplateStringsArray.\n * @returns {React.ComponentType} Returns the enhanced styled component.\n */\nconst withStyledComponent = (WrappedComponent, styles) => {\n  /**\n   * A styled component generated by combining WrappedComponent with additional styles.\n   * @type {React.ComponentType}\n   */\n  const StyledComponent = styled(WrappedComponent)`\n    ${styles};\n  `;\n\n  // Set default props from the original component to the styled component\n  StyledComponent.defaultProps = WrappedComponent.defaultProps;\n\n  return StyledComponent;\n};\n\nexport default withStyledComponent;\n"],"names":["prefix","AccessForbidden","className","history","CapRow","CapHeading","messages","CapButton","withStyles","style","InternalIntouchLogin","props","userName","setUserName","password","setPassword","loginProgess","updateLoginProgress","signInLabel","userNameLabel","passwordLabel","apiEndPoint","onSuccess","onFailure","handleNameChange","event","handlePasswordChange","handleLoginProgess","state","authorize","body","headers","requestObj","handleLogin","res","err","CapSpin","CapCard","CapImage","CapInput","styles","scope","Wrapper","Content","PageTemplate","children","NotFoundPage","index","appName","isStandaloneMode","StyledCenteredDivEmbedded","StyledCenteredDivStandalone","checkStore","store","shape","defineActionTypes","actionDescriptors","options","prefixedActions","key","target","prop","injectReducerFactory","isValid","reducer","getInjectors","WrappedComponent","ReducerInjector","injectReducer","forwardedRef","otherProps","ReducerInjectorWithForwardRef","ref","allowedModes","checkKey","checkDescriptor","descriptor","mode","injectSagaFactory","args","newDescriptor","saga","hasSaga","ejectSagaFactory","task","context","ejectSaga","InjectSaga","InjectSagaWithForwardRef","createReducer","injectedReducers","initialReducers","rootReducer","RESTART_ON_REMOUNT","DAEMON","ONCE_TILL_UNMOUNT","defaultAction","clearData","authenticate","authApi","getTranslations","locale","api","actionTypes","INITIAL","PROGRESS","SUCCESS","FAILURE","DEFAULT_LOCALE","DEFAULT_MOMENT_LOCALE","initialState","withCustomAuthAndTranslationsReducer","action","defaultSaga","authSaga","error","translationsSaga","watchForDefaultSaga","watchForAuthSaga","watchForTranslationsSaga","selectWithCustomAuthAndTranslationsDomain","makeSelectWithCustomAuthAndTranslations","substate","withCustomAuthAndTranslations","Component","appType","isHostedOnPlatform","translationsApi","WithAuthAndTranslations","_a","actions","authStatus","authData","translationsStatus","translationsData","rest","reactIntlLocale","defaultReactIntlLocale","module","translationsLoaded","mapStateToProps","mapDispatchToProps","dispatch","withReducer","withSaga","withConnect","StyledComponent"],"sourceRoot":""}